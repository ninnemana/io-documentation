// Copyright (c) 2012, the Dart project authors.  Please see the AUTHORS file
// for details. All rights reserved. Use of this source code is governed by a
// BSD-style license that can be found in the LICENSE file.

// DO NOT EDIT
// Auto-generated dart:html library.

#library("html");

#import('dart:dom_deprecated', prefix:'dom');

#source('generated/html/dartium/AbstractWorker.dart');
#source('generated/html/dartium/AnchorElement.dart');
#source('generated/html/dartium/Animation.dart');
#source('generated/html/dartium/AnimationEvent.dart');
#source('generated/html/dartium/AnimationList.dart');
#source('generated/html/dartium/AppletElement.dart');
#source('generated/html/dartium/AreaElement.dart');
#source('generated/html/dartium/ArrayBuffer.dart');
#source('generated/html/dartium/ArrayBufferView.dart');
#source('generated/html/dartium/Attr.dart');
#source('generated/html/dartium/AudioBuffer.dart');
#source('generated/html/dartium/AudioBufferSourceNode.dart');
#source('generated/html/dartium/AudioChannelMerger.dart');
#source('generated/html/dartium/AudioChannelSplitter.dart');
#source('generated/html/dartium/AudioContext.dart');
#source('generated/html/dartium/AudioDestinationNode.dart');
#source('generated/html/dartium/AudioElement.dart');
#source('generated/html/dartium/AudioGain.dart');
#source('generated/html/dartium/AudioGainNode.dart');
#source('generated/html/dartium/AudioListener.dart');
#source('generated/html/dartium/AudioNode.dart');
#source('generated/html/dartium/AudioPannerNode.dart');
#source('generated/html/dartium/AudioParam.dart');
#source('generated/html/dartium/AudioProcessingEvent.dart');
#source('generated/html/dartium/AudioSourceNode.dart');
#source('generated/html/dartium/BRElement.dart');
#source('generated/html/dartium/BarInfo.dart');
#source('generated/html/dartium/BaseElement.dart');
#source('generated/html/dartium/BaseFontElement.dart');
#source('generated/html/dartium/BeforeLoadEvent.dart');
#source('generated/html/dartium/BiquadFilterNode.dart');
#source('generated/html/dartium/Blob.dart');
#source('generated/html/dartium/BlobBuilder.dart');
#source('generated/html/dartium/BodyElement.dart');
#source('generated/html/dartium/ButtonElement.dart');
#source('generated/html/dartium/CDATASection.dart');
#source('generated/html/dartium/CSSCharsetRule.dart');
#source('generated/html/dartium/CSSFontFaceRule.dart');
#source('generated/html/dartium/CSSImportRule.dart');
#source('generated/html/dartium/CSSKeyframeRule.dart');
#source('generated/html/dartium/CSSKeyframesRule.dart');
#source('generated/html/dartium/CSSMatrix.dart');
#source('generated/html/dartium/CSSMediaRule.dart');
#source('generated/html/dartium/CSSPageRule.dart');
#source('generated/html/dartium/CSSPrimitiveValue.dart');
#source('generated/html/dartium/CSSRule.dart');
#source('generated/html/dartium/CSSRuleList.dart');
#source('generated/html/dartium/CSSStyleDeclaration.dart');
#source('generated/html/dartium/CSSStyleRule.dart');
#source('generated/html/dartium/CSSStyleSheet.dart');
#source('generated/html/dartium/CSSTransformValue.dart');
#source('generated/html/dartium/CSSUnknownRule.dart');
#source('generated/html/dartium/CSSValue.dart');
#source('generated/html/dartium/CSSValueList.dart');
#source('generated/html/dartium/CanvasElement.dart');
#source('generated/html/dartium/CanvasGradient.dart');
#source('generated/html/dartium/CanvasPattern.dart');
#source('generated/html/dartium/CanvasPixelArray.dart');
#source('generated/html/dartium/CanvasRenderingContext.dart');
#source('generated/html/dartium/CanvasRenderingContext2D.dart');
#source('generated/html/dartium/CharacterData.dart');
#source('generated/html/dartium/ClientRect.dart');
#source('generated/html/dartium/ClientRectList.dart');
#source('generated/html/dartium/Clipboard.dart');
#source('generated/html/dartium/CloseEvent.dart');
#source('generated/html/dartium/Comment.dart');
#source('generated/html/dartium/CompositionEvent.dart');
#source('generated/html/dartium/Console.dart');
#source('generated/html/dartium/ContentElement.dart');
#source('generated/html/dartium/ConvolverNode.dart');
#source('generated/html/dartium/Coordinates.dart');
#source('generated/html/dartium/Counter.dart');
#source('generated/html/dartium/Crypto.dart');
#source('generated/html/dartium/CustomEvent.dart');
#source('generated/html/dartium/DListElement.dart');
#source('generated/html/dartium/DOMApplicationCache.dart');
#source('generated/html/dartium/DOMException.dart');
#source('generated/html/dartium/DOMFileSystem.dart');
#source('generated/html/dartium/DOMFileSystemSync.dart');
#source('generated/html/dartium/DOMFormData.dart');
#source('generated/html/dartium/DOMImplementation.dart');
#source('generated/html/dartium/DOMMimeType.dart');
#source('generated/html/dartium/DOMMimeTypeArray.dart');
#source('generated/html/dartium/DOMParser.dart');
#source('generated/html/dartium/DOMPlugin.dart');
#source('generated/html/dartium/DOMPluginArray.dart');
#source('generated/html/dartium/DOMSelection.dart');
#source('generated/html/dartium/DOMSettableTokenList.dart');
#source('generated/html/dartium/DOMTokenList.dart');
#source('generated/html/dartium/DOMURL.dart');
#source('generated/html/dartium/DataTransferItem.dart');
#source('generated/html/dartium/DataTransferItemList.dart');
#source('generated/html/dartium/DataView.dart');
#source('generated/html/dartium/Database.dart');
#source('generated/html/dartium/DatabaseSync.dart');
#source('generated/html/dartium/DedicatedWorkerContext.dart');
#source('generated/html/dartium/DelayNode.dart');
#source('generated/html/dartium/DetailsElement.dart');
#source('generated/html/dartium/DeviceMotionEvent.dart');
#source('generated/html/dartium/DeviceOrientationEvent.dart');
#source('generated/html/dartium/DirectoryElement.dart');
#source('generated/html/dartium/DirectoryEntry.dart');
#source('generated/html/dartium/DirectoryEntrySync.dart');
#source('generated/html/dartium/DirectoryReader.dart');
#source('generated/html/dartium/DirectoryReaderSync.dart');
#source('generated/html/dartium/DivElement.dart');
#source('generated/html/dartium/Document.dart');
#source('generated/html/dartium/DocumentFragment.dart');
#source('generated/html/dartium/DocumentType.dart');
#source('generated/html/dartium/DynamicsCompressorNode.dart');
#source('generated/html/dartium/Element.dart');
#source('generated/html/dartium/ElementTimeControl.dart');
#source('generated/html/dartium/ElementTraversal.dart');
#source('generated/html/dartium/EmbedElement.dart');
#source('generated/html/dartium/Entity.dart');
#source('generated/html/dartium/EntityReference.dart');
#source('generated/html/dartium/Entry.dart');
#source('generated/html/dartium/EntryArray.dart');
#source('generated/html/dartium/EntryArraySync.dart');
#source('generated/html/dartium/EntrySync.dart');
#source('generated/html/dartium/ErrorEvent.dart');
#source('generated/html/dartium/Event.dart');
#source('generated/html/dartium/EventException.dart');
#source('generated/html/dartium/EventSource.dart');
#source('generated/html/dartium/EventTarget.dart');
#source('generated/html/dartium/FieldSetElement.dart');
#source('generated/html/dartium/File.dart');
#source('generated/html/dartium/FileEntry.dart');
#source('generated/html/dartium/FileEntrySync.dart');
#source('generated/html/dartium/FileError.dart');
#source('generated/html/dartium/FileException.dart');
#source('generated/html/dartium/FileList.dart');
#source('generated/html/dartium/FileReader.dart');
#source('generated/html/dartium/FileReaderSync.dart');
#source('generated/html/dartium/FileWriter.dart');
#source('generated/html/dartium/FileWriterSync.dart');
#source('generated/html/dartium/Float32Array.dart');
#source('generated/html/dartium/Float64Array.dart');
#source('generated/html/dartium/FontElement.dart');
#source('generated/html/dartium/FormElement.dart');
#source('generated/html/dartium/FrameElement.dart');
#source('generated/html/dartium/FrameSetElement.dart');
#source('generated/html/dartium/Geolocation.dart');
#source('generated/html/dartium/Geoposition.dart');
#source('generated/html/dartium/HRElement.dart');
#source('generated/html/dartium/HTMLAllCollection.dart');
#source('generated/html/dartium/HTMLCollection.dart');
#source('generated/html/dartium/HTMLOptionsCollection.dart');
#source('generated/html/dartium/HashChangeEvent.dart');
#source('generated/html/dartium/HeadElement.dart');
#source('generated/html/dartium/HeadingElement.dart');
#source('generated/html/dartium/HighPass2FilterNode.dart');
#source('generated/html/dartium/History.dart');
#source('generated/html/dartium/HtmlElement.dart');
#source('generated/html/dartium/IDBAny.dart');
#source('generated/html/dartium/IDBCursor.dart');
#source('generated/html/dartium/IDBCursorWithValue.dart');
#source('generated/html/dartium/IDBDatabase.dart');
#source('generated/html/dartium/IDBDatabaseError.dart');
#source('generated/html/dartium/IDBDatabaseException.dart');
#source('generated/html/dartium/IDBFactory.dart');
#source('generated/html/dartium/IDBIndex.dart');
#source('generated/html/dartium/IDBKey.dart');
#source('generated/html/dartium/IDBKeyRange.dart');
#source('generated/html/dartium/IDBObjectStore.dart');
#source('generated/html/dartium/IDBRequest.dart');
#source('generated/html/dartium/IDBTransaction.dart');
#source('generated/html/dartium/IDBVersionChangeEvent.dart');
#source('generated/html/dartium/IDBVersionChangeRequest.dart');
#source('generated/html/dartium/IFrameElement.dart');
#source('generated/html/dartium/ImageData.dart');
#source('generated/html/dartium/ImageElement.dart');
#source('generated/html/dartium/InputElement.dart');
#source('generated/html/dartium/Int16Array.dart');
#source('generated/html/dartium/Int32Array.dart');
#source('generated/html/dartium/Int8Array.dart');
#source('generated/html/dartium/JavaScriptAudioNode.dart');
#source('generated/html/dartium/JavaScriptCallFrame.dart');
#source('generated/html/dartium/KeyboardEvent.dart');
#source('generated/html/dartium/KeygenElement.dart');
#source('generated/html/dartium/LIElement.dart');
#source('generated/html/dartium/LabelElement.dart');
#source('generated/html/dartium/LegendElement.dart');
#source('generated/html/dartium/LinkElement.dart');
#source('generated/html/dartium/LocalMediaStream.dart');
#source('generated/html/dartium/Location.dart');
#source('generated/html/dartium/LowPass2FilterNode.dart');
#source('generated/html/dartium/MapElement.dart');
#source('generated/html/dartium/MarqueeElement.dart');
#source('generated/html/dartium/MediaController.dart');
#source('generated/html/dartium/MediaElement.dart');
#source('generated/html/dartium/MediaElementAudioSourceNode.dart');
#source('generated/html/dartium/MediaError.dart');
#source('generated/html/dartium/MediaList.dart');
#source('generated/html/dartium/MediaQueryList.dart');
#source('generated/html/dartium/MediaQueryListListener.dart');
#source('generated/html/dartium/MediaStream.dart');
#source('generated/html/dartium/MediaStreamEvent.dart');
#source('generated/html/dartium/MediaStreamList.dart');
#source('generated/html/dartium/MediaStreamTrack.dart');
#source('generated/html/dartium/MediaStreamTrackList.dart');
#source('generated/html/dartium/MemoryInfo.dart');
#source('generated/html/dartium/MenuElement.dart');
#source('generated/html/dartium/MessageChannel.dart');
#source('generated/html/dartium/MessageEvent.dart');
#source('generated/html/dartium/MessagePort.dart');
#source('generated/html/dartium/MetaElement.dart');
#source('generated/html/dartium/Metadata.dart');
#source('generated/html/dartium/MeterElement.dart');
#source('generated/html/dartium/ModElement.dart');
#source('generated/html/dartium/MouseEvent.dart');
#source('generated/html/dartium/MutationEvent.dart');
#source('generated/html/dartium/NamedNodeMap.dart');
#source('generated/html/dartium/Navigator.dart');
#source('generated/html/dartium/NavigatorUserMediaError.dart');
#source('generated/html/dartium/Node.dart');
#source('generated/html/dartium/NodeFilter.dart');
#source('generated/html/dartium/NodeIterator.dart');
#source('generated/html/dartium/NodeList.dart');
#source('generated/html/dartium/NodeSelector.dart');
#source('generated/html/dartium/Notation.dart');
#source('generated/html/dartium/Notification.dart');
#source('generated/html/dartium/NotificationCenter.dart');
#source('generated/html/dartium/OESStandardDerivatives.dart');
#source('generated/html/dartium/OESTextureFloat.dart');
#source('generated/html/dartium/OESVertexArrayObject.dart');
#source('generated/html/dartium/OListElement.dart');
#source('generated/html/dartium/ObjectElement.dart');
#source('generated/html/dartium/OfflineAudioCompletionEvent.dart');
#source('generated/html/dartium/OperationNotAllowedException.dart');
#source('generated/html/dartium/OptGroupElement.dart');
#source('generated/html/dartium/OptionElement.dart');
#source('generated/html/dartium/OutputElement.dart');
#source('generated/html/dartium/OverflowEvent.dart');
#source('generated/html/dartium/PageTransitionEvent.dart');
#source('generated/html/dartium/ParagraphElement.dart');
#source('generated/html/dartium/ParamElement.dart');
#source('generated/html/dartium/PeerConnection.dart');
#source('generated/html/dartium/Performance.dart');
#source('generated/html/dartium/PerformanceNavigation.dart');
#source('generated/html/dartium/PerformanceTiming.dart');
#source('generated/html/dartium/Point.dart');
#source('generated/html/dartium/PopStateEvent.dart');
#source('generated/html/dartium/PositionError.dart');
#source('generated/html/dartium/PreElement.dart');
#source('generated/html/dartium/ProcessingInstruction.dart');
#source('generated/html/dartium/ProgressElement.dart');
#source('generated/html/dartium/ProgressEvent.dart');
#source('generated/html/dartium/QuoteElement.dart');
#source('generated/html/dartium/RGBColor.dart');
#source('generated/html/dartium/Range.dart');
#source('generated/html/dartium/RangeException.dart');
#source('generated/html/dartium/RealtimeAnalyserNode.dart');
#source('generated/html/dartium/Rect.dart');
#source('generated/html/dartium/SQLError.dart');
#source('generated/html/dartium/SQLException.dart');
#source('generated/html/dartium/SQLResultSet.dart');
#source('generated/html/dartium/SQLResultSetRowList.dart');
#source('generated/html/dartium/SQLTransaction.dart');
#source('generated/html/dartium/SQLTransactionSync.dart');
#source('generated/html/dartium/SVGAElement.dart');
#source('generated/html/dartium/SVGAltGlyphDefElement.dart');
#source('generated/html/dartium/SVGAltGlyphElement.dart');
#source('generated/html/dartium/SVGAltGlyphItemElement.dart');
#source('generated/html/dartium/SVGAngle.dart');
#source('generated/html/dartium/SVGAnimateColorElement.dart');
#source('generated/html/dartium/SVGAnimateElement.dart');
#source('generated/html/dartium/SVGAnimateMotionElement.dart');
#source('generated/html/dartium/SVGAnimateTransformElement.dart');
#source('generated/html/dartium/SVGAnimatedAngle.dart');
#source('generated/html/dartium/SVGAnimatedBoolean.dart');
#source('generated/html/dartium/SVGAnimatedEnumeration.dart');
#source('generated/html/dartium/SVGAnimatedInteger.dart');
#source('generated/html/dartium/SVGAnimatedLength.dart');
#source('generated/html/dartium/SVGAnimatedLengthList.dart');
#source('generated/html/dartium/SVGAnimatedNumber.dart');
#source('generated/html/dartium/SVGAnimatedNumberList.dart');
#source('generated/html/dartium/SVGAnimatedPreserveAspectRatio.dart');
#source('generated/html/dartium/SVGAnimatedRect.dart');
#source('generated/html/dartium/SVGAnimatedString.dart');
#source('generated/html/dartium/SVGAnimatedTransformList.dart');
#source('generated/html/dartium/SVGAnimationElement.dart');
#source('generated/html/dartium/SVGCircleElement.dart');
#source('generated/html/dartium/SVGClipPathElement.dart');
#source('generated/html/dartium/SVGColor.dart');
#source('generated/html/dartium/SVGComponentTransferFunctionElement.dart');
#source('generated/html/dartium/SVGCursorElement.dart');
#source('generated/html/dartium/SVGDefsElement.dart');
#source('generated/html/dartium/SVGDescElement.dart');
#source('generated/html/dartium/SVGDocument.dart');
#source('generated/html/dartium/SVGElement.dart');
#source('generated/html/dartium/SVGElementInstance.dart');
#source('generated/html/dartium/SVGElementInstanceList.dart');
#source('generated/html/dartium/SVGEllipseElement.dart');
#source('generated/html/dartium/SVGException.dart');
#source('generated/html/dartium/SVGExternalResourcesRequired.dart');
#source('generated/html/dartium/SVGFEBlendElement.dart');
#source('generated/html/dartium/SVGFEColorMatrixElement.dart');
#source('generated/html/dartium/SVGFEComponentTransferElement.dart');
#source('generated/html/dartium/SVGFECompositeElement.dart');
#source('generated/html/dartium/SVGFEConvolveMatrixElement.dart');
#source('generated/html/dartium/SVGFEDiffuseLightingElement.dart');
#source('generated/html/dartium/SVGFEDisplacementMapElement.dart');
#source('generated/html/dartium/SVGFEDistantLightElement.dart');
#source('generated/html/dartium/SVGFEDropShadowElement.dart');
#source('generated/html/dartium/SVGFEFloodElement.dart');
#source('generated/html/dartium/SVGFEFuncAElement.dart');
#source('generated/html/dartium/SVGFEFuncBElement.dart');
#source('generated/html/dartium/SVGFEFuncGElement.dart');
#source('generated/html/dartium/SVGFEFuncRElement.dart');
#source('generated/html/dartium/SVGFEGaussianBlurElement.dart');
#source('generated/html/dartium/SVGFEImageElement.dart');
#source('generated/html/dartium/SVGFEMergeElement.dart');
#source('generated/html/dartium/SVGFEMergeNodeElement.dart');
#source('generated/html/dartium/SVGFEMorphologyElement.dart');
#source('generated/html/dartium/SVGFEOffsetElement.dart');
#source('generated/html/dartium/SVGFEPointLightElement.dart');
#source('generated/html/dartium/SVGFESpecularLightingElement.dart');
#source('generated/html/dartium/SVGFESpotLightElement.dart');
#source('generated/html/dartium/SVGFETileElement.dart');
#source('generated/html/dartium/SVGFETurbulenceElement.dart');
#source('generated/html/dartium/SVGFilterElement.dart');
#source('generated/html/dartium/SVGFilterPrimitiveStandardAttributes.dart');
#source('generated/html/dartium/SVGFitToViewBox.dart');
#source('generated/html/dartium/SVGFontElement.dart');
#source('generated/html/dartium/SVGFontFaceElement.dart');
#source('generated/html/dartium/SVGFontFaceFormatElement.dart');
#source('generated/html/dartium/SVGFontFaceNameElement.dart');
#source('generated/html/dartium/SVGFontFaceSrcElement.dart');
#source('generated/html/dartium/SVGFontFaceUriElement.dart');
#source('generated/html/dartium/SVGForeignObjectElement.dart');
#source('generated/html/dartium/SVGGElement.dart');
#source('generated/html/dartium/SVGGlyphElement.dart');
#source('generated/html/dartium/SVGGlyphRefElement.dart');
#source('generated/html/dartium/SVGGradientElement.dart');
#source('generated/html/dartium/SVGHKernElement.dart');
#source('generated/html/dartium/SVGImageElement.dart');
#source('generated/html/dartium/SVGLangSpace.dart');
#source('generated/html/dartium/SVGLength.dart');
#source('generated/html/dartium/SVGLengthList.dart');
#source('generated/html/dartium/SVGLineElement.dart');
#source('generated/html/dartium/SVGLinearGradientElement.dart');
#source('generated/html/dartium/SVGLocatable.dart');
#source('generated/html/dartium/SVGMPathElement.dart');
#source('generated/html/dartium/SVGMarkerElement.dart');
#source('generated/html/dartium/SVGMaskElement.dart');
#source('generated/html/dartium/SVGMatrix.dart');
#source('generated/html/dartium/SVGMetadataElement.dart');
#source('generated/html/dartium/SVGMissingGlyphElement.dart');
#source('generated/html/dartium/SVGNumber.dart');
#source('generated/html/dartium/SVGNumberList.dart');
#source('generated/html/dartium/SVGPaint.dart');
#source('generated/html/dartium/SVGPathElement.dart');
#source('generated/html/dartium/SVGPathSeg.dart');
#source('generated/html/dartium/SVGPathSegArcAbs.dart');
#source('generated/html/dartium/SVGPathSegArcRel.dart');
#source('generated/html/dartium/SVGPathSegClosePath.dart');
#source('generated/html/dartium/SVGPathSegCurvetoCubicAbs.dart');
#source('generated/html/dartium/SVGPathSegCurvetoCubicRel.dart');
#source('generated/html/dartium/SVGPathSegCurvetoCubicSmoothAbs.dart');
#source('generated/html/dartium/SVGPathSegCurvetoCubicSmoothRel.dart');
#source('generated/html/dartium/SVGPathSegCurvetoQuadraticAbs.dart');
#source('generated/html/dartium/SVGPathSegCurvetoQuadraticRel.dart');
#source('generated/html/dartium/SVGPathSegCurvetoQuadraticSmoothAbs.dart');
#source('generated/html/dartium/SVGPathSegCurvetoQuadraticSmoothRel.dart');
#source('generated/html/dartium/SVGPathSegLinetoAbs.dart');
#source('generated/html/dartium/SVGPathSegLinetoHorizontalAbs.dart');
#source('generated/html/dartium/SVGPathSegLinetoHorizontalRel.dart');
#source('generated/html/dartium/SVGPathSegLinetoRel.dart');
#source('generated/html/dartium/SVGPathSegLinetoVerticalAbs.dart');
#source('generated/html/dartium/SVGPathSegLinetoVerticalRel.dart');
#source('generated/html/dartium/SVGPathSegList.dart');
#source('generated/html/dartium/SVGPathSegMovetoAbs.dart');
#source('generated/html/dartium/SVGPathSegMovetoRel.dart');
#source('generated/html/dartium/SVGPatternElement.dart');
#source('generated/html/dartium/SVGPoint.dart');
#source('generated/html/dartium/SVGPointList.dart');
#source('generated/html/dartium/SVGPolygonElement.dart');
#source('generated/html/dartium/SVGPolylineElement.dart');
#source('generated/html/dartium/SVGPreserveAspectRatio.dart');
#source('generated/html/dartium/SVGRadialGradientElement.dart');
#source('generated/html/dartium/SVGRect.dart');
#source('generated/html/dartium/SVGRectElement.dart');
#source('generated/html/dartium/SVGRenderingIntent.dart');
#source('generated/html/dartium/SVGSVGElement.dart');
#source('generated/html/dartium/SVGScriptElement.dart');
#source('generated/html/dartium/SVGSetElement.dart');
#source('generated/html/dartium/SVGStopElement.dart');
#source('generated/html/dartium/SVGStringList.dart');
#source('generated/html/dartium/SVGStylable.dart');
#source('generated/html/dartium/SVGStyleElement.dart');
#source('generated/html/dartium/SVGSwitchElement.dart');
#source('generated/html/dartium/SVGSymbolElement.dart');
#source('generated/html/dartium/SVGTRefElement.dart');
#source('generated/html/dartium/SVGTSpanElement.dart');
#source('generated/html/dartium/SVGTests.dart');
#source('generated/html/dartium/SVGTextContentElement.dart');
#source('generated/html/dartium/SVGTextElement.dart');
#source('generated/html/dartium/SVGTextPathElement.dart');
#source('generated/html/dartium/SVGTextPositioningElement.dart');
#source('generated/html/dartium/SVGTitleElement.dart');
#source('generated/html/dartium/SVGTransform.dart');
#source('generated/html/dartium/SVGTransformList.dart');
#source('generated/html/dartium/SVGTransformable.dart');
#source('generated/html/dartium/SVGURIReference.dart');
#source('generated/html/dartium/SVGUnitTypes.dart');
#source('generated/html/dartium/SVGUseElement.dart');
#source('generated/html/dartium/SVGVKernElement.dart');
#source('generated/html/dartium/SVGViewElement.dart');
#source('generated/html/dartium/SVGViewSpec.dart');
#source('generated/html/dartium/SVGZoomAndPan.dart');
#source('generated/html/dartium/SVGZoomEvent.dart');
#source('generated/html/dartium/Screen.dart');
#source('generated/html/dartium/ScriptElement.dart');
#source('generated/html/dartium/ScriptProfile.dart');
#source('generated/html/dartium/ScriptProfileNode.dart');
#source('generated/html/dartium/SelectElement.dart');
#source('generated/html/dartium/ShadowElement.dart');
#source('generated/html/dartium/ShadowRoot.dart');
#source('generated/html/dartium/SharedWorker.dart');
#source('generated/html/dartium/SharedWorkerContext.dart');
#source('generated/html/dartium/SourceElement.dart');
#source('generated/html/dartium/SpanElement.dart');
#source('generated/html/dartium/SpeechInputEvent.dart');
#source('generated/html/dartium/SpeechInputResult.dart');
#source('generated/html/dartium/SpeechInputResultList.dart');
#source('generated/html/dartium/Storage.dart');
#source('generated/html/dartium/StorageEvent.dart');
#source('generated/html/dartium/StorageInfo.dart');
#source('generated/html/dartium/StyleElement.dart');
#source('generated/html/dartium/StyleMedia.dart');
#source('generated/html/dartium/StyleSheet.dart');
#source('generated/html/dartium/StyleSheetList.dart');
#source('generated/html/dartium/TableCaptionElement.dart');
#source('generated/html/dartium/TableCellElement.dart');
#source('generated/html/dartium/TableColElement.dart');
#source('generated/html/dartium/TableElement.dart');
#source('generated/html/dartium/TableRowElement.dart');
#source('generated/html/dartium/TableSectionElement.dart');
#source('generated/html/dartium/Text.dart');
#source('generated/html/dartium/TextAreaElement.dart');
#source('generated/html/dartium/TextEvent.dart');
#source('generated/html/dartium/TextMetrics.dart');
#source('generated/html/dartium/TextTrack.dart');
#source('generated/html/dartium/TextTrackCue.dart');
#source('generated/html/dartium/TextTrackCueList.dart');
#source('generated/html/dartium/TextTrackList.dart');
#source('generated/html/dartium/TimeRanges.dart');
#source('generated/html/dartium/TitleElement.dart');
#source('generated/html/dartium/Touch.dart');
#source('generated/html/dartium/TouchEvent.dart');
#source('generated/html/dartium/TouchList.dart');
#source('generated/html/dartium/TrackElement.dart');
#source('generated/html/dartium/TrackEvent.dart');
#source('generated/html/dartium/TransitionEvent.dart');
#source('generated/html/dartium/TreeWalker.dart');
#source('generated/html/dartium/UIEvent.dart');
#source('generated/html/dartium/UListElement.dart');
#source('generated/html/dartium/Uint16Array.dart');
#source('generated/html/dartium/Uint32Array.dart');
#source('generated/html/dartium/Uint8Array.dart');
#source('generated/html/dartium/Uint8ClampedArray.dart');
#source('generated/html/dartium/UnknownElement.dart');
#source('generated/html/dartium/ValidityState.dart');
#source('generated/html/dartium/VideoElement.dart');
#source('generated/html/dartium/WaveShaperNode.dart');
#source('generated/html/dartium/WebGLActiveInfo.dart');
#source('generated/html/dartium/WebGLBuffer.dart');
#source('generated/html/dartium/WebGLCompressedTextureS3TC.dart');
#source('generated/html/dartium/WebGLContextAttributes.dart');
#source('generated/html/dartium/WebGLContextEvent.dart');
#source('generated/html/dartium/WebGLDebugRendererInfo.dart');
#source('generated/html/dartium/WebGLDebugShaders.dart');
#source('generated/html/dartium/WebGLFramebuffer.dart');
#source('generated/html/dartium/WebGLLoseContext.dart');
#source('generated/html/dartium/WebGLProgram.dart');
#source('generated/html/dartium/WebGLRenderbuffer.dart');
#source('generated/html/dartium/WebGLRenderingContext.dart');
#source('generated/html/dartium/WebGLShader.dart');
#source('generated/html/dartium/WebGLTexture.dart');
#source('generated/html/dartium/WebGLUniformLocation.dart');
#source('generated/html/dartium/WebGLVertexArrayObjectOES.dart');
#source('generated/html/dartium/WebKitCSSRegionRule.dart');
#source('generated/html/dartium/WebKitNamedFlow.dart');
#source('generated/html/dartium/WebSocket.dart');
#source('generated/html/dartium/WheelEvent.dart');
#source('generated/html/dartium/Window.dart');
#source('generated/html/dartium/Worker.dart');
#source('generated/html/dartium/WorkerContext.dart');
#source('generated/html/dartium/WorkerLocation.dart');
#source('generated/html/dartium/WorkerNavigator.dart');
#source('generated/html/dartium/XMLHttpRequest.dart');
#source('generated/html/dartium/XMLHttpRequestException.dart');
#source('generated/html/dartium/XMLHttpRequestProgressEvent.dart');
#source('generated/html/dartium/XMLHttpRequestUpload.dart');
#source('generated/html/dartium/XMLSerializer.dart');
#source('generated/html/dartium/XPathEvaluator.dart');
#source('generated/html/dartium/XPathException.dart');
#source('generated/html/dartium/XPathExpression.dart');
#source('generated/html/dartium/XPathNSResolver.dart');
#source('generated/html/dartium/XPathResult.dart');
#source('generated/html/dartium/XSLTProcessor.dart');
#source('generated/html/dartium/_AudioElementFactoryProvider.dart');
#source('generated/html/dartium/_BlobBuilderFactoryProvider.dart');
#source('generated/html/dartium/_CSSMatrixFactoryProvider.dart');
#source('generated/html/dartium/_DOMParserFactoryProvider.dart');
#source('generated/html/dartium/_DOMURLFactoryProvider.dart');
#source('generated/html/dartium/_EventSourceFactoryProvider.dart');
#source('generated/html/dartium/_FileReaderFactoryProvider.dart');
#source('generated/html/dartium/_FileReaderSyncFactoryProvider.dart');
#source('generated/html/dartium/_MediaControllerFactoryProvider.dart');
#source('generated/html/dartium/_MediaStreamFactoryProvider.dart');
#source('generated/html/dartium/_MessageChannelFactoryProvider.dart');
#source('generated/html/dartium/_OptionElementFactoryProvider.dart');
#source('generated/html/dartium/_PeerConnectionFactoryProvider.dart');
#source('generated/html/dartium/_ShadowRootFactoryProvider.dart');
#source('generated/html/dartium/_SharedWorkerFactoryProvider.dart');
#source('generated/html/dartium/_TextTrackCueFactoryProvider.dart');
#source('generated/html/dartium/_WorkerFactoryProvider.dart');
#source('generated/html/dartium/_XMLHttpRequestFactoryProvider.dart');
#source('generated/html/dartium/_XMLSerializerFactoryProvider.dart');
#source('generated/html/dartium/_XPathEvaluatorFactoryProvider.dart');
#source('generated/html/dartium/_XSLTProcessorFactoryProvider.dart');
#source('generated/html/interface/AbstractWorker.dart');
#source('generated/html/interface/AnchorElement.dart');
#source('generated/html/interface/Animation.dart');
#source('generated/html/interface/AnimationEvent.dart');
#source('generated/html/interface/AnimationList.dart');
#source('generated/html/interface/AppletElement.dart');
#source('generated/html/interface/AreaElement.dart');
#source('generated/html/interface/ArrayBuffer.dart');
#source('generated/html/interface/ArrayBufferView.dart');
#source('generated/html/interface/Attr.dart');
#source('generated/html/interface/AudioBuffer.dart');
#source('generated/html/interface/AudioBufferCallback.dart');
#source('generated/html/interface/AudioBufferSourceNode.dart');
#source('generated/html/interface/AudioChannelMerger.dart');
#source('generated/html/interface/AudioChannelSplitter.dart');
#source('generated/html/interface/AudioContext.dart');
#source('generated/html/interface/AudioDestinationNode.dart');
#source('generated/html/interface/AudioElement.dart');
#source('generated/html/interface/AudioGain.dart');
#source('generated/html/interface/AudioGainNode.dart');
#source('generated/html/interface/AudioListener.dart');
#source('generated/html/interface/AudioNode.dart');
#source('generated/html/interface/AudioPannerNode.dart');
#source('generated/html/interface/AudioParam.dart');
#source('generated/html/interface/AudioProcessingEvent.dart');
#source('generated/html/interface/AudioSourceNode.dart');
#source('generated/html/interface/BRElement.dart');
#source('generated/html/interface/BarInfo.dart');
#source('generated/html/interface/BaseElement.dart');
#source('generated/html/interface/BaseFontElement.dart');
#source('generated/html/interface/BeforeLoadEvent.dart');
#source('generated/html/interface/BiquadFilterNode.dart');
#source('generated/html/interface/Blob.dart');
#source('generated/html/interface/BlobBuilder.dart');
#source('generated/html/interface/BodyElement.dart');
#source('generated/html/interface/ButtonElement.dart');
#source('generated/html/interface/CDATASection.dart');
#source('generated/html/interface/CSSCharsetRule.dart');
#source('generated/html/interface/CSSFontFaceRule.dart');
#source('generated/html/interface/CSSImportRule.dart');
#source('generated/html/interface/CSSKeyframeRule.dart');
#source('generated/html/interface/CSSKeyframesRule.dart');
#source('generated/html/interface/CSSMatrix.dart');
#source('generated/html/interface/CSSMediaRule.dart');
#source('generated/html/interface/CSSPageRule.dart');
#source('generated/html/interface/CSSPrimitiveValue.dart');
#source('generated/html/interface/CSSRule.dart');
#source('generated/html/interface/CSSRuleList.dart');
#source('generated/html/interface/CSSStyleDeclaration.dart');
#source('generated/html/interface/CSSStyleRule.dart');
#source('generated/html/interface/CSSStyleSheet.dart');
#source('generated/html/interface/CSSTransformValue.dart');
#source('generated/html/interface/CSSUnknownRule.dart');
#source('generated/html/interface/CSSValue.dart');
#source('generated/html/interface/CSSValueList.dart');
#source('generated/html/interface/CanvasElement.dart');
#source('generated/html/interface/CanvasGradient.dart');
#source('generated/html/interface/CanvasPattern.dart');
#source('generated/html/interface/CanvasPixelArray.dart');
#source('generated/html/interface/CanvasRenderingContext.dart');
#source('generated/html/interface/CanvasRenderingContext2D.dart');
#source('generated/html/interface/CharacterData.dart');
#source('generated/html/interface/ClientRect.dart');
#source('generated/html/interface/ClientRectList.dart');
#source('generated/html/interface/Clipboard.dart');
#source('generated/html/interface/CloseEvent.dart');
#source('generated/html/interface/Comment.dart');
#source('generated/html/interface/CompositionEvent.dart');
#source('generated/html/interface/Console.dart');
#source('generated/html/interface/ContentElement.dart');
#source('generated/html/interface/ConvolverNode.dart');
#source('generated/html/interface/Coordinates.dart');
#source('generated/html/interface/Counter.dart');
#source('generated/html/interface/Crypto.dart');
#source('generated/html/interface/CustomEvent.dart');
#source('generated/html/interface/DListElement.dart');
#source('generated/html/interface/DOMApplicationCache.dart');
#source('generated/html/interface/DOMException.dart');
#source('generated/html/interface/DOMFileSystem.dart');
#source('generated/html/interface/DOMFileSystemSync.dart');
#source('generated/html/interface/DOMFormData.dart');
#source('generated/html/interface/DOMImplementation.dart');
#source('generated/html/interface/DOMMimeType.dart');
#source('generated/html/interface/DOMMimeTypeArray.dart');
#source('generated/html/interface/DOMParser.dart');
#source('generated/html/interface/DOMPlugin.dart');
#source('generated/html/interface/DOMPluginArray.dart');
#source('generated/html/interface/DOMSelection.dart');
#source('generated/html/interface/DOMSettableTokenList.dart');
#source('generated/html/interface/DOMTokenList.dart');
#source('generated/html/interface/DOMURL.dart');
#source('generated/html/interface/DataTransferItem.dart');
#source('generated/html/interface/DataTransferItemList.dart');
#source('generated/html/interface/DataView.dart');
#source('generated/html/interface/Database.dart');
#source('generated/html/interface/DatabaseCallback.dart');
#source('generated/html/interface/DatabaseSync.dart');
#source('generated/html/interface/DedicatedWorkerContext.dart');
#source('generated/html/interface/DelayNode.dart');
#source('generated/html/interface/DetailsElement.dart');
#source('generated/html/interface/DeviceMotionEvent.dart');
#source('generated/html/interface/DeviceOrientationEvent.dart');
#source('generated/html/interface/DirectoryElement.dart');
#source('generated/html/interface/DirectoryEntry.dart');
#source('generated/html/interface/DirectoryEntrySync.dart');
#source('generated/html/interface/DirectoryReader.dart');
#source('generated/html/interface/DirectoryReaderSync.dart');
#source('generated/html/interface/DivElement.dart');
#source('generated/html/interface/Document.dart');
#source('generated/html/interface/DocumentFragment.dart');
#source('generated/html/interface/DocumentType.dart');
#source('generated/html/interface/DynamicsCompressorNode.dart');
#source('generated/html/interface/Element.dart');
#source('generated/html/interface/ElementTimeControl.dart');
#source('generated/html/interface/ElementTraversal.dart');
#source('generated/html/interface/EmbedElement.dart');
#source('generated/html/interface/Entity.dart');
#source('generated/html/interface/EntityReference.dart');
#source('generated/html/interface/EntriesCallback.dart');
#source('generated/html/interface/Entry.dart');
#source('generated/html/interface/EntryArray.dart');
#source('generated/html/interface/EntryArraySync.dart');
#source('generated/html/interface/EntryCallback.dart');
#source('generated/html/interface/EntrySync.dart');
#source('generated/html/interface/ErrorCallback.dart');
#source('generated/html/interface/ErrorEvent.dart');
#source('generated/html/interface/Event.dart');
#source('generated/html/interface/EventException.dart');
#source('generated/html/interface/EventSource.dart');
#source('generated/html/interface/EventTarget.dart');
#source('generated/html/interface/FieldSetElement.dart');
#source('generated/html/interface/File.dart');
#source('generated/html/interface/FileCallback.dart');
#source('generated/html/interface/FileEntry.dart');
#source('generated/html/interface/FileEntrySync.dart');
#source('generated/html/interface/FileError.dart');
#source('generated/html/interface/FileException.dart');
#source('generated/html/interface/FileList.dart');
#source('generated/html/interface/FileReader.dart');
#source('generated/html/interface/FileReaderSync.dart');
#source('generated/html/interface/FileSystemCallback.dart');
#source('generated/html/interface/FileWriter.dart');
#source('generated/html/interface/FileWriterCallback.dart');
#source('generated/html/interface/FileWriterSync.dart');
#source('generated/html/interface/Float32Array.dart');
#source('generated/html/interface/Float64Array.dart');
#source('generated/html/interface/FontElement.dart');
#source('generated/html/interface/FormElement.dart');
#source('generated/html/interface/FrameElement.dart');
#source('generated/html/interface/FrameSetElement.dart');
#source('generated/html/interface/Geolocation.dart');
#source('generated/html/interface/Geoposition.dart');
#source('generated/html/interface/HRElement.dart');
#source('generated/html/interface/HTMLAllCollection.dart');
#source('generated/html/interface/HTMLCollection.dart');
#source('generated/html/interface/HTMLOptionsCollection.dart');
#source('generated/html/interface/HashChangeEvent.dart');
#source('generated/html/interface/HeadElement.dart');
#source('generated/html/interface/HeadingElement.dart');
#source('generated/html/interface/HighPass2FilterNode.dart');
#source('generated/html/interface/History.dart');
#source('generated/html/interface/HtmlElement.dart');
#source('generated/html/interface/IDBAny.dart');
#source('generated/html/interface/IDBCursor.dart');
#source('generated/html/interface/IDBCursorWithValue.dart');
#source('generated/html/interface/IDBDatabase.dart');
#source('generated/html/interface/IDBDatabaseError.dart');
#source('generated/html/interface/IDBDatabaseException.dart');
#source('generated/html/interface/IDBFactory.dart');
#source('generated/html/interface/IDBIndex.dart');
#source('generated/html/interface/IDBKey.dart');
#source('generated/html/interface/IDBKeyRange.dart');
#source('generated/html/interface/IDBObjectStore.dart');
#source('generated/html/interface/IDBRequest.dart');
#source('generated/html/interface/IDBTransaction.dart');
#source('generated/html/interface/IDBVersionChangeEvent.dart');
#source('generated/html/interface/IDBVersionChangeRequest.dart');
#source('generated/html/interface/IFrameElement.dart');
#source('generated/html/interface/ImageData.dart');
#source('generated/html/interface/ImageElement.dart');
#source('generated/html/interface/InputElement.dart');
#source('generated/html/interface/Int16Array.dart');
#source('generated/html/interface/Int32Array.dart');
#source('generated/html/interface/Int8Array.dart');
#source('generated/html/interface/JavaScriptAudioNode.dart');
#source('generated/html/interface/JavaScriptCallFrame.dart');
#source('generated/html/interface/KeyboardEvent.dart');
#source('generated/html/interface/KeygenElement.dart');
#source('generated/html/interface/LIElement.dart');
#source('generated/html/interface/LabelElement.dart');
#source('generated/html/interface/LegendElement.dart');
#source('generated/html/interface/LinkElement.dart');
#source('generated/html/interface/LocalMediaStream.dart');
#source('generated/html/interface/Location.dart');
#source('generated/html/interface/LowPass2FilterNode.dart');
#source('generated/html/interface/MapElement.dart');
#source('generated/html/interface/MarqueeElement.dart');
#source('generated/html/interface/MediaController.dart');
#source('generated/html/interface/MediaElement.dart');
#source('generated/html/interface/MediaElementAudioSourceNode.dart');
#source('generated/html/interface/MediaError.dart');
#source('generated/html/interface/MediaList.dart');
#source('generated/html/interface/MediaQueryList.dart');
#source('generated/html/interface/MediaQueryListListener.dart');
#source('generated/html/interface/MediaStream.dart');
#source('generated/html/interface/MediaStreamEvent.dart');
#source('generated/html/interface/MediaStreamList.dart');
#source('generated/html/interface/MediaStreamTrack.dart');
#source('generated/html/interface/MediaStreamTrackList.dart');
#source('generated/html/interface/MemoryInfo.dart');
#source('generated/html/interface/MenuElement.dart');
#source('generated/html/interface/MessageChannel.dart');
#source('generated/html/interface/MessageEvent.dart');
#source('generated/html/interface/MessagePort.dart');
#source('generated/html/interface/MetaElement.dart');
#source('generated/html/interface/Metadata.dart');
#source('generated/html/interface/MetadataCallback.dart');
#source('generated/html/interface/MeterElement.dart');
#source('generated/html/interface/ModElement.dart');
#source('generated/html/interface/MouseEvent.dart');
#source('generated/html/interface/MutationEvent.dart');
#source('generated/html/interface/NamedNodeMap.dart');
#source('generated/html/interface/Navigator.dart');
#source('generated/html/interface/NavigatorUserMediaError.dart');
#source('generated/html/interface/NavigatorUserMediaErrorCallback.dart');
#source('generated/html/interface/NavigatorUserMediaSuccessCallback.dart');
#source('generated/html/interface/Node.dart');
#source('generated/html/interface/NodeFilter.dart');
#source('generated/html/interface/NodeIterator.dart');
#source('generated/html/interface/NodeList.dart');
#source('generated/html/interface/NodeSelector.dart');
#source('generated/html/interface/Notation.dart');
#source('generated/html/interface/Notification.dart');
#source('generated/html/interface/NotificationCenter.dart');
#source('generated/html/interface/OESStandardDerivatives.dart');
#source('generated/html/interface/OESTextureFloat.dart');
#source('generated/html/interface/OESVertexArrayObject.dart');
#source('generated/html/interface/OListElement.dart');
#source('generated/html/interface/ObjectElement.dart');
#source('generated/html/interface/OfflineAudioCompletionEvent.dart');
#source('generated/html/interface/OperationNotAllowedException.dart');
#source('generated/html/interface/OptGroupElement.dart');
#source('generated/html/interface/OptionElement.dart');
#source('generated/html/interface/OutputElement.dart');
#source('generated/html/interface/OverflowEvent.dart');
#source('generated/html/interface/PageTransitionEvent.dart');
#source('generated/html/interface/ParagraphElement.dart');
#source('generated/html/interface/ParamElement.dart');
#source('generated/html/interface/PeerConnection.dart');
#source('generated/html/interface/Performance.dart');
#source('generated/html/interface/PerformanceNavigation.dart');
#source('generated/html/interface/PerformanceTiming.dart');
#source('generated/html/interface/Point.dart');
#source('generated/html/interface/PopStateEvent.dart');
#source('generated/html/interface/PositionCallback.dart');
#source('generated/html/interface/PositionError.dart');
#source('generated/html/interface/PositionErrorCallback.dart');
#source('generated/html/interface/PreElement.dart');
#source('generated/html/interface/ProcessingInstruction.dart');
#source('generated/html/interface/ProgressElement.dart');
#source('generated/html/interface/ProgressEvent.dart');
#source('generated/html/interface/QuoteElement.dart');
#source('generated/html/interface/RGBColor.dart');
#source('generated/html/interface/Range.dart');
#source('generated/html/interface/RangeException.dart');
#source('generated/html/interface/RealtimeAnalyserNode.dart');
#source('generated/html/interface/Rect.dart');
#source('generated/html/interface/RequestAnimationFrameCallback.dart');
#source('generated/html/interface/SQLError.dart');
#source('generated/html/interface/SQLException.dart');
#source('generated/html/interface/SQLResultSet.dart');
#source('generated/html/interface/SQLResultSetRowList.dart');
#source('generated/html/interface/SQLStatementCallback.dart');
#source('generated/html/interface/SQLStatementErrorCallback.dart');
#source('generated/html/interface/SQLTransaction.dart');
#source('generated/html/interface/SQLTransactionCallback.dart');
#source('generated/html/interface/SQLTransactionErrorCallback.dart');
#source('generated/html/interface/SQLTransactionSync.dart');
#source('generated/html/interface/SQLTransactionSyncCallback.dart');
#source('generated/html/interface/SVGAElement.dart');
#source('generated/html/interface/SVGAltGlyphDefElement.dart');
#source('generated/html/interface/SVGAltGlyphElement.dart');
#source('generated/html/interface/SVGAltGlyphItemElement.dart');
#source('generated/html/interface/SVGAngle.dart');
#source('generated/html/interface/SVGAnimateColorElement.dart');
#source('generated/html/interface/SVGAnimateElement.dart');
#source('generated/html/interface/SVGAnimateMotionElement.dart');
#source('generated/html/interface/SVGAnimateTransformElement.dart');
#source('generated/html/interface/SVGAnimatedAngle.dart');
#source('generated/html/interface/SVGAnimatedBoolean.dart');
#source('generated/html/interface/SVGAnimatedEnumeration.dart');
#source('generated/html/interface/SVGAnimatedInteger.dart');
#source('generated/html/interface/SVGAnimatedLength.dart');
#source('generated/html/interface/SVGAnimatedLengthList.dart');
#source('generated/html/interface/SVGAnimatedNumber.dart');
#source('generated/html/interface/SVGAnimatedNumberList.dart');
#source('generated/html/interface/SVGAnimatedPreserveAspectRatio.dart');
#source('generated/html/interface/SVGAnimatedRect.dart');
#source('generated/html/interface/SVGAnimatedString.dart');
#source('generated/html/interface/SVGAnimatedTransformList.dart');
#source('generated/html/interface/SVGAnimationElement.dart');
#source('generated/html/interface/SVGCircleElement.dart');
#source('generated/html/interface/SVGClipPathElement.dart');
#source('generated/html/interface/SVGColor.dart');
#source('generated/html/interface/SVGComponentTransferFunctionElement.dart');
#source('generated/html/interface/SVGCursorElement.dart');
#source('generated/html/interface/SVGDefsElement.dart');
#source('generated/html/interface/SVGDescElement.dart');
#source('generated/html/interface/SVGDocument.dart');
#source('generated/html/interface/SVGElement.dart');
#source('generated/html/interface/SVGElementInstance.dart');
#source('generated/html/interface/SVGElementInstanceList.dart');
#source('generated/html/interface/SVGEllipseElement.dart');
#source('generated/html/interface/SVGException.dart');
#source('generated/html/interface/SVGExternalResourcesRequired.dart');
#source('generated/html/interface/SVGFEBlendElement.dart');
#source('generated/html/interface/SVGFEColorMatrixElement.dart');
#source('generated/html/interface/SVGFEComponentTransferElement.dart');
#source('generated/html/interface/SVGFECompositeElement.dart');
#source('generated/html/interface/SVGFEConvolveMatrixElement.dart');
#source('generated/html/interface/SVGFEDiffuseLightingElement.dart');
#source('generated/html/interface/SVGFEDisplacementMapElement.dart');
#source('generated/html/interface/SVGFEDistantLightElement.dart');
#source('generated/html/interface/SVGFEDropShadowElement.dart');
#source('generated/html/interface/SVGFEFloodElement.dart');
#source('generated/html/interface/SVGFEFuncAElement.dart');
#source('generated/html/interface/SVGFEFuncBElement.dart');
#source('generated/html/interface/SVGFEFuncGElement.dart');
#source('generated/html/interface/SVGFEFuncRElement.dart');
#source('generated/html/interface/SVGFEGaussianBlurElement.dart');
#source('generated/html/interface/SVGFEImageElement.dart');
#source('generated/html/interface/SVGFEMergeElement.dart');
#source('generated/html/interface/SVGFEMergeNodeElement.dart');
#source('generated/html/interface/SVGFEMorphologyElement.dart');
#source('generated/html/interface/SVGFEOffsetElement.dart');
#source('generated/html/interface/SVGFEPointLightElement.dart');
#source('generated/html/interface/SVGFESpecularLightingElement.dart');
#source('generated/html/interface/SVGFESpotLightElement.dart');
#source('generated/html/interface/SVGFETileElement.dart');
#source('generated/html/interface/SVGFETurbulenceElement.dart');
#source('generated/html/interface/SVGFilterElement.dart');
#source('generated/html/interface/SVGFilterPrimitiveStandardAttributes.dart');
#source('generated/html/interface/SVGFitToViewBox.dart');
#source('generated/html/interface/SVGFontElement.dart');
#source('generated/html/interface/SVGFontFaceElement.dart');
#source('generated/html/interface/SVGFontFaceFormatElement.dart');
#source('generated/html/interface/SVGFontFaceNameElement.dart');
#source('generated/html/interface/SVGFontFaceSrcElement.dart');
#source('generated/html/interface/SVGFontFaceUriElement.dart');
#source('generated/html/interface/SVGForeignObjectElement.dart');
#source('generated/html/interface/SVGGElement.dart');
#source('generated/html/interface/SVGGlyphElement.dart');
#source('generated/html/interface/SVGGlyphRefElement.dart');
#source('generated/html/interface/SVGGradientElement.dart');
#source('generated/html/interface/SVGHKernElement.dart');
#source('generated/html/interface/SVGImageElement.dart');
#source('generated/html/interface/SVGLangSpace.dart');
#source('generated/html/interface/SVGLength.dart');
#source('generated/html/interface/SVGLengthList.dart');
#source('generated/html/interface/SVGLineElement.dart');
#source('generated/html/interface/SVGLinearGradientElement.dart');
#source('generated/html/interface/SVGLocatable.dart');
#source('generated/html/interface/SVGMPathElement.dart');
#source('generated/html/interface/SVGMarkerElement.dart');
#source('generated/html/interface/SVGMaskElement.dart');
#source('generated/html/interface/SVGMatrix.dart');
#source('generated/html/interface/SVGMetadataElement.dart');
#source('generated/html/interface/SVGMissingGlyphElement.dart');
#source('generated/html/interface/SVGNumber.dart');
#source('generated/html/interface/SVGNumberList.dart');
#source('generated/html/interface/SVGPaint.dart');
#source('generated/html/interface/SVGPathElement.dart');
#source('generated/html/interface/SVGPathSeg.dart');
#source('generated/html/interface/SVGPathSegArcAbs.dart');
#source('generated/html/interface/SVGPathSegArcRel.dart');
#source('generated/html/interface/SVGPathSegClosePath.dart');
#source('generated/html/interface/SVGPathSegCurvetoCubicAbs.dart');
#source('generated/html/interface/SVGPathSegCurvetoCubicRel.dart');
#source('generated/html/interface/SVGPathSegCurvetoCubicSmoothAbs.dart');
#source('generated/html/interface/SVGPathSegCurvetoCubicSmoothRel.dart');
#source('generated/html/interface/SVGPathSegCurvetoQuadraticAbs.dart');
#source('generated/html/interface/SVGPathSegCurvetoQuadraticRel.dart');
#source('generated/html/interface/SVGPathSegCurvetoQuadraticSmoothAbs.dart');
#source('generated/html/interface/SVGPathSegCurvetoQuadraticSmoothRel.dart');
#source('generated/html/interface/SVGPathSegLinetoAbs.dart');
#source('generated/html/interface/SVGPathSegLinetoHorizontalAbs.dart');
#source('generated/html/interface/SVGPathSegLinetoHorizontalRel.dart');
#source('generated/html/interface/SVGPathSegLinetoRel.dart');
#source('generated/html/interface/SVGPathSegLinetoVerticalAbs.dart');
#source('generated/html/interface/SVGPathSegLinetoVerticalRel.dart');
#source('generated/html/interface/SVGPathSegList.dart');
#source('generated/html/interface/SVGPathSegMovetoAbs.dart');
#source('generated/html/interface/SVGPathSegMovetoRel.dart');
#source('generated/html/interface/SVGPatternElement.dart');
#source('generated/html/interface/SVGPoint.dart');
#source('generated/html/interface/SVGPointList.dart');
#source('generated/html/interface/SVGPolygonElement.dart');
#source('generated/html/interface/SVGPolylineElement.dart');
#source('generated/html/interface/SVGPreserveAspectRatio.dart');
#source('generated/html/interface/SVGRadialGradientElement.dart');
#source('generated/html/interface/SVGRect.dart');
#source('generated/html/interface/SVGRectElement.dart');
#source('generated/html/interface/SVGRenderingIntent.dart');
#source('generated/html/interface/SVGSVGElement.dart');
#source('generated/html/interface/SVGScriptElement.dart');
#source('generated/html/interface/SVGSetElement.dart');
#source('generated/html/interface/SVGStopElement.dart');
#source('generated/html/interface/SVGStringList.dart');
#source('generated/html/interface/SVGStylable.dart');
#source('generated/html/interface/SVGStyleElement.dart');
#source('generated/html/interface/SVGSwitchElement.dart');
#source('generated/html/interface/SVGSymbolElement.dart');
#source('generated/html/interface/SVGTRefElement.dart');
#source('generated/html/interface/SVGTSpanElement.dart');
#source('generated/html/interface/SVGTests.dart');
#source('generated/html/interface/SVGTextContentElement.dart');
#source('generated/html/interface/SVGTextElement.dart');
#source('generated/html/interface/SVGTextPathElement.dart');
#source('generated/html/interface/SVGTextPositioningElement.dart');
#source('generated/html/interface/SVGTitleElement.dart');
#source('generated/html/interface/SVGTransform.dart');
#source('generated/html/interface/SVGTransformList.dart');
#source('generated/html/interface/SVGTransformable.dart');
#source('generated/html/interface/SVGURIReference.dart');
#source('generated/html/interface/SVGUnitTypes.dart');
#source('generated/html/interface/SVGUseElement.dart');
#source('generated/html/interface/SVGVKernElement.dart');
#source('generated/html/interface/SVGViewElement.dart');
#source('generated/html/interface/SVGViewSpec.dart');
#source('generated/html/interface/SVGZoomAndPan.dart');
#source('generated/html/interface/SVGZoomEvent.dart');
#source('generated/html/interface/Screen.dart');
#source('generated/html/interface/ScriptElement.dart');
#source('generated/html/interface/ScriptProfile.dart');
#source('generated/html/interface/ScriptProfileNode.dart');
#source('generated/html/interface/SelectElement.dart');
#source('generated/html/interface/ShadowElement.dart');
#source('generated/html/interface/ShadowRoot.dart');
#source('generated/html/interface/SharedWorker.dart');
#source('generated/html/interface/SharedWorkerContext.dart');
#source('generated/html/interface/SignalingCallback.dart');
#source('generated/html/interface/SourceElement.dart');
#source('generated/html/interface/SpanElement.dart');
#source('generated/html/interface/SpeechInputEvent.dart');
#source('generated/html/interface/SpeechInputResult.dart');
#source('generated/html/interface/SpeechInputResultList.dart');
#source('generated/html/interface/Storage.dart');
#source('generated/html/interface/StorageEvent.dart');
#source('generated/html/interface/StorageInfo.dart');
#source('generated/html/interface/StorageInfoErrorCallback.dart');
#source('generated/html/interface/StorageInfoQuotaCallback.dart');
#source('generated/html/interface/StorageInfoUsageCallback.dart');
#source('generated/html/interface/StringCallback.dart');
#source('generated/html/interface/StyleElement.dart');
#source('generated/html/interface/StyleMedia.dart');
#source('generated/html/interface/StyleSheet.dart');
#source('generated/html/interface/StyleSheetList.dart');
#source('generated/html/interface/TableCaptionElement.dart');
#source('generated/html/interface/TableCellElement.dart');
#source('generated/html/interface/TableColElement.dart');
#source('generated/html/interface/TableElement.dart');
#source('generated/html/interface/TableRowElement.dart');
#source('generated/html/interface/TableSectionElement.dart');
#source('generated/html/interface/Text.dart');
#source('generated/html/interface/TextAreaElement.dart');
#source('generated/html/interface/TextEvent.dart');
#source('generated/html/interface/TextMetrics.dart');
#source('generated/html/interface/TextTrack.dart');
#source('generated/html/interface/TextTrackCue.dart');
#source('generated/html/interface/TextTrackCueList.dart');
#source('generated/html/interface/TextTrackList.dart');
#source('generated/html/interface/TimeRanges.dart');
#source('generated/html/interface/TitleElement.dart');
#source('generated/html/interface/Touch.dart');
#source('generated/html/interface/TouchEvent.dart');
#source('generated/html/interface/TouchList.dart');
#source('generated/html/interface/TrackElement.dart');
#source('generated/html/interface/TrackEvent.dart');
#source('generated/html/interface/TransitionEvent.dart');
#source('generated/html/interface/TreeWalker.dart');
#source('generated/html/interface/UIEvent.dart');
#source('generated/html/interface/UListElement.dart');
#source('generated/html/interface/Uint16Array.dart');
#source('generated/html/interface/Uint32Array.dart');
#source('generated/html/interface/Uint8Array.dart');
#source('generated/html/interface/Uint8ClampedArray.dart');
#source('generated/html/interface/UnknownElement.dart');
#source('generated/html/interface/ValidityState.dart');
#source('generated/html/interface/VideoElement.dart');
#source('generated/html/interface/VoidCallback.dart');
#source('generated/html/interface/WaveShaperNode.dart');
#source('generated/html/interface/WebGLActiveInfo.dart');
#source('generated/html/interface/WebGLBuffer.dart');
#source('generated/html/interface/WebGLCompressedTextureS3TC.dart');
#source('generated/html/interface/WebGLContextAttributes.dart');
#source('generated/html/interface/WebGLContextEvent.dart');
#source('generated/html/interface/WebGLDebugRendererInfo.dart');
#source('generated/html/interface/WebGLDebugShaders.dart');
#source('generated/html/interface/WebGLFramebuffer.dart');
#source('generated/html/interface/WebGLLoseContext.dart');
#source('generated/html/interface/WebGLProgram.dart');
#source('generated/html/interface/WebGLRenderbuffer.dart');
#source('generated/html/interface/WebGLRenderingContext.dart');
#source('generated/html/interface/WebGLShader.dart');
#source('generated/html/interface/WebGLTexture.dart');
#source('generated/html/interface/WebGLUniformLocation.dart');
#source('generated/html/interface/WebGLVertexArrayObjectOES.dart');
#source('generated/html/interface/WebKitCSSRegionRule.dart');
#source('generated/html/interface/WebKitNamedFlow.dart');
#source('generated/html/interface/WebSocket.dart');
#source('generated/html/interface/WheelEvent.dart');
#source('generated/html/interface/Window.dart');
#source('generated/html/interface/Worker.dart');
#source('generated/html/interface/WorkerContext.dart');
#source('generated/html/interface/WorkerLocation.dart');
#source('generated/html/interface/WorkerNavigator.dart');
#source('generated/html/interface/XMLHttpRequest.dart');
#source('generated/html/interface/XMLHttpRequestException.dart');
#source('generated/html/interface/XMLHttpRequestProgressEvent.dart');
#source('generated/html/interface/XMLHttpRequestUpload.dart');
#source('generated/html/interface/XMLSerializer.dart');
#source('generated/html/interface/XPathEvaluator.dart');
#source('generated/html/interface/XPathException.dart');
#source('generated/html/interface/XPathExpression.dart');
#source('generated/html/interface/XPathNSResolver.dart');
#source('generated/html/interface/XPathResult.dart');
#source('generated/html/interface/XSLTProcessor.dart');


#source('../dom/src/EventListener.dart');
#source('../dom/src/KeyLocation.dart');
#source('../dom/src/KeyName.dart');
#source('../dom/src/ReadyState.dart');
#source('../dom/src/TimeoutHandler.dart');
#source('../dom/src/_Collections.dart');
#source('../dom/src/_XMLHttpRequestUtils.dart');
#source('../html/src/shared_FactoryProviders.dart');
#source('../html/src/dartium_FactoryProviders.dart');
#source('../html/src/Measurement.dart');
#source('../html/src/Device.dart');
#source('../html/src/_Testing.dart');
#source('../html/src/_DOMTypeBase.dart');
#source('../dom/src/_ListIterators.dart');
#source('../dom/src/_Lists.dart');

_WindowImpl __window;
_DocumentImpl __document;

void _initialize() {
  __window = _wrap(dom.window);
  __document = _wrap(dom.document.documentElement);
}

Window get window() {
  if (__window == null) {
    _initialize();
  }
  return __window;
}

Document get document() {
  if (__document == null) {
    _initialize();
  }
  return __document;
}

_WindowImpl get _window() {
  if (__window == null) {
    _initialize();
  }
  return __window;
}

_DocumentImpl get _document() {
  if (__document == null) {
    _initialize();
  }
  return __document;
}

_unwrap(raw) {
  return raw is _DOMTypeBase ? raw._ptr : raw;
}

// Warning: does not attempt wrap event listeners.
_wrap(raw) {
  if (raw is! dom.DOMType) return raw;
  dom.DOMType domObject = raw;
  if (domObject.dartObjectLocalStorage != null)
    return domObject.dartObjectLocalStorage;
  switch(domObject.typeName) {
    case 'HTMLDocument':
      throw 'A document should never be wrapped directly. TODO(jacobr) XXX';
    case 'HTMLHtmlElement':
      return new _DocumentImpl._wrap(domObject);
    case 'HTMLElement':
      return new _UnknownElementImpl._wrap(domObject);
    case "EventTarget": return new _EventTargetImpl._wrap(domObject);
    case "AbstractWorker": return new _AbstractWorkerImpl._wrap(domObject);
    case "Node": return new _NodeImpl._wrap(domObject);
    case "NodeSelector": return new _NodeSelectorImpl._wrap(domObject);
    case "ElementTraversal": return new _ElementTraversalImpl._wrap(domObject);
    case "Element": return new _ElementImpl._wrap(domObject);
    case "HTMLAnchorElement": return new _AnchorElementImpl._wrap(domObject);
    case "WebKitAnimation": return new _AnimationImpl._wrap(domObject);
    case "Event": return new _EventImpl._wrap(domObject);
    case "WebKitAnimationEvent": return new _AnimationEventImpl._wrap(domObject);
    case "WebKitAnimationList": return new _AnimationListImpl._wrap(domObject);
    case "HTMLAppletElement": return new _AppletElementImpl._wrap(domObject);
    case "HTMLAreaElement": return new _AreaElementImpl._wrap(domObject);
    case "ArrayBuffer": return new _ArrayBufferImpl._wrap(domObject);
    case "ArrayBufferView": return new _ArrayBufferViewImpl._wrap(domObject);
    case "Attr": return new _AttrImpl._wrap(domObject);
    case "AudioBuffer": return new _AudioBufferImpl._wrap(domObject);
    case "AudioNode": return new _AudioNodeImpl._wrap(domObject);
    case "AudioSourceNode": return new _AudioSourceNodeImpl._wrap(domObject);
    case "AudioBufferSourceNode": return new _AudioBufferSourceNodeImpl._wrap(domObject);
    case "AudioChannelMerger": return new _AudioChannelMergerImpl._wrap(domObject);
    case "AudioChannelSplitter": return new _AudioChannelSplitterImpl._wrap(domObject);
    case "AudioContext": return new _AudioContextImpl._wrap(domObject);
    case "AudioDestinationNode": return new _AudioDestinationNodeImpl._wrap(domObject);
    case "HTMLMediaElement": return new _MediaElementImpl._wrap(domObject);
    case "HTMLAudioElement": return new _AudioElementImpl._wrap(domObject);
    case "AudioParam": return new _AudioParamImpl._wrap(domObject);
    case "AudioGain": return new _AudioGainImpl._wrap(domObject);
    case "AudioGainNode": return new _AudioGainNodeImpl._wrap(domObject);
    case "AudioListener": return new _AudioListenerImpl._wrap(domObject);
    case "AudioPannerNode": return new _AudioPannerNodeImpl._wrap(domObject);
    case "AudioProcessingEvent": return new _AudioProcessingEventImpl._wrap(domObject);
    case "HTMLBRElement": return new _BRElementImpl._wrap(domObject);
    case "BarInfo": return new _BarInfoImpl._wrap(domObject);
    case "HTMLBaseElement": return new _BaseElementImpl._wrap(domObject);
    case "HTMLBaseFontElement": return new _BaseFontElementImpl._wrap(domObject);
    case "BeforeLoadEvent": return new _BeforeLoadEventImpl._wrap(domObject);
    case "BiquadFilterNode": return new _BiquadFilterNodeImpl._wrap(domObject);
    case "Blob": return new _BlobImpl._wrap(domObject);
    case "WebKitBlobBuilder": return new _BlobBuilderImpl._wrap(domObject);
    case "HTMLBodyElement": return new _BodyElementImpl._wrap(domObject);
    case "HTMLButtonElement": return new _ButtonElementImpl._wrap(domObject);
    case "CharacterData": return new _CharacterDataImpl._wrap(domObject);
    case "Text": return new _TextImpl._wrap(domObject);
    case "CDATASection": return new _CDATASectionImpl._wrap(domObject);
    case "CSSRule": return new _CSSRuleImpl._wrap(domObject);
    case "CSSCharsetRule": return new _CSSCharsetRuleImpl._wrap(domObject);
    case "CSSFontFaceRule": return new _CSSFontFaceRuleImpl._wrap(domObject);
    case "CSSImportRule": return new _CSSImportRuleImpl._wrap(domObject);
    case "WebKitCSSKeyframeRule": return new _CSSKeyframeRuleImpl._wrap(domObject);
    case "WebKitCSSKeyframesRule": return new _CSSKeyframesRuleImpl._wrap(domObject);
    case "WebKitCSSMatrix": return new _CSSMatrixImpl._wrap(domObject);
    case "CSSMediaRule": return new _CSSMediaRuleImpl._wrap(domObject);
    case "CSSPageRule": return new _CSSPageRuleImpl._wrap(domObject);
    case "CSSValue": return new _CSSValueImpl._wrap(domObject);
    case "CSSPrimitiveValue": return new _CSSPrimitiveValueImpl._wrap(domObject);
    case "CSSRuleList": return new _CSSRuleListImpl._wrap(domObject);
    case "CSSStyleDeclaration": return new _CSSStyleDeclarationImpl._wrap(domObject);
    case "CSSStyleRule": return new _CSSStyleRuleImpl._wrap(domObject);
    case "StyleSheet": return new _StyleSheetImpl._wrap(domObject);
    case "CSSStyleSheet": return new _CSSStyleSheetImpl._wrap(domObject);
    case "CSSValueList": return new _CSSValueListImpl._wrap(domObject);
    case "WebKitCSSTransformValue": return new _CSSTransformValueImpl._wrap(domObject);
    case "CSSUnknownRule": return new _CSSUnknownRuleImpl._wrap(domObject);
    case "HTMLCanvasElement": return new _CanvasElementImpl._wrap(domObject);
    case "CanvasGradient": return new _CanvasGradientImpl._wrap(domObject);
    case "CanvasPattern": return new _CanvasPatternImpl._wrap(domObject);
    case "CanvasPixelArray": return new _CanvasPixelArrayImpl._wrap(domObject);
    case "CanvasRenderingContext": return new _CanvasRenderingContextImpl._wrap(domObject);
    case "CanvasRenderingContext2D": return new _CanvasRenderingContext2DImpl._wrap(domObject);
    case "ClientRect": return new _ClientRectImpl._wrap(domObject);
    case "ClientRectList": return new _ClientRectListImpl._wrap(domObject);
    case "Clipboard": return new _ClipboardImpl._wrap(domObject);
    case "CloseEvent": return new _CloseEventImpl._wrap(domObject);
    case "Comment": return new _CommentImpl._wrap(domObject);
    case "UIEvent": return new _UIEventImpl._wrap(domObject);
    case "CompositionEvent": return new _CompositionEventImpl._wrap(domObject);
    case "Console": return new _ConsoleImpl._wrap(domObject);
    case "HTMLContentElement": return new _ContentElementImpl._wrap(domObject);
    case "ConvolverNode": return new _ConvolverNodeImpl._wrap(domObject);
    case "Coordinates": return new _CoordinatesImpl._wrap(domObject);
    case "Counter": return new _CounterImpl._wrap(domObject);
    case "Crypto": return new _CryptoImpl._wrap(domObject);
    case "CustomEvent": return new _CustomEventImpl._wrap(domObject);
    case "HTMLDListElement": return new _DListElementImpl._wrap(domObject);
    case "DOMApplicationCache": return new _DOMApplicationCacheImpl._wrap(domObject);
    case "DOMException": return new _DOMExceptionImpl._wrap(domObject);
    case "DOMFileSystem": return new _DOMFileSystemImpl._wrap(domObject);
    case "DOMFileSystemSync": return new _DOMFileSystemSyncImpl._wrap(domObject);
    case "DOMFormData": return new _DOMFormDataImpl._wrap(domObject);
    case "DOMImplementation": return new _DOMImplementationImpl._wrap(domObject);
    case "DOMMimeType": return new _DOMMimeTypeImpl._wrap(domObject);
    case "DOMMimeTypeArray": return new _DOMMimeTypeArrayImpl._wrap(domObject);
    case "DOMParser": return new _DOMParserImpl._wrap(domObject);
    case "DOMPlugin": return new _DOMPluginImpl._wrap(domObject);
    case "DOMPluginArray": return new _DOMPluginArrayImpl._wrap(domObject);
    case "DOMSelection": return new _DOMSelectionImpl._wrap(domObject);
    case "DOMTokenList": return new _DOMTokenListImpl._wrap(domObject);
    case "DOMSettableTokenList": return new _DOMSettableTokenListImpl._wrap(domObject);
    case "DOMURL": return new _DOMURLImpl._wrap(domObject);
    case "DataTransferItem": return new _DataTransferItemImpl._wrap(domObject);
    case "DataTransferItemList": return new _DataTransferItemListImpl._wrap(domObject);
    case "DataView": return new _DataViewImpl._wrap(domObject);
    case "Database": return new _DatabaseImpl._wrap(domObject);
    case "DatabaseSync": return new _DatabaseSyncImpl._wrap(domObject);
    case "WorkerContext": return new _WorkerContextImpl._wrap(domObject);
    case "DedicatedWorkerContext": return new _DedicatedWorkerContextImpl._wrap(domObject);
    case "DelayNode": return new _DelayNodeImpl._wrap(domObject);
    case "HTMLDetailsElement": return new _DetailsElementImpl._wrap(domObject);
    case "DeviceMotionEvent": return new _DeviceMotionEventImpl._wrap(domObject);
    case "DeviceOrientationEvent": return new _DeviceOrientationEventImpl._wrap(domObject);
    case "HTMLDirectoryElement": return new _DirectoryElementImpl._wrap(domObject);
    case "Entry": return new _EntryImpl._wrap(domObject);
    case "DirectoryEntry": return new _DirectoryEntryImpl._wrap(domObject);
    case "EntrySync": return new _EntrySyncImpl._wrap(domObject);
    case "DirectoryEntrySync": return new _DirectoryEntrySyncImpl._wrap(domObject);
    case "DirectoryReader": return new _DirectoryReaderImpl._wrap(domObject);
    case "DirectoryReaderSync": return new _DirectoryReaderSyncImpl._wrap(domObject);
    case "HTMLDivElement": return new _DivElementImpl._wrap(domObject);
    case "DocumentFragment": return new _DocumentFragmentImpl._wrap(domObject);
    case "DocumentType": return new _DocumentTypeImpl._wrap(domObject);
    case "DynamicsCompressorNode": return new _DynamicsCompressorNodeImpl._wrap(domObject);
    case "ElementTimeControl": return new _ElementTimeControlImpl._wrap(domObject);
    case "HTMLEmbedElement": return new _EmbedElementImpl._wrap(domObject);
    case "Entity": return new _EntityImpl._wrap(domObject);
    case "EntityReference": return new _EntityReferenceImpl._wrap(domObject);
    case "EntryArray": return new _EntryArrayImpl._wrap(domObject);
    case "EntryArraySync": return new _EntryArraySyncImpl._wrap(domObject);
    case "ErrorEvent": return new _ErrorEventImpl._wrap(domObject);
    case "EventException": return new _EventExceptionImpl._wrap(domObject);
    case "EventSource": return new _EventSourceImpl._wrap(domObject);
    case "HTMLFieldSetElement": return new _FieldSetElementImpl._wrap(domObject);
    case "File": return new _FileImpl._wrap(domObject);
    case "FileEntry": return new _FileEntryImpl._wrap(domObject);
    case "FileEntrySync": return new _FileEntrySyncImpl._wrap(domObject);
    case "FileError": return new _FileErrorImpl._wrap(domObject);
    case "FileException": return new _FileExceptionImpl._wrap(domObject);
    case "FileList": return new _FileListImpl._wrap(domObject);
    case "FileReader": return new _FileReaderImpl._wrap(domObject);
    case "FileReaderSync": return new _FileReaderSyncImpl._wrap(domObject);
    case "FileWriter": return new _FileWriterImpl._wrap(domObject);
    case "FileWriterSync": return new _FileWriterSyncImpl._wrap(domObject);
    case "Float32Array": return new _Float32ArrayImpl._wrap(domObject);
    case "Float64Array": return new _Float64ArrayImpl._wrap(domObject);
    case "HTMLFontElement": return new _FontElementImpl._wrap(domObject);
    case "HTMLFormElement": return new _FormElementImpl._wrap(domObject);
    case "HTMLFrameElement": return new _FrameElementImpl._wrap(domObject);
    case "HTMLFrameSetElement": return new _FrameSetElementImpl._wrap(domObject);
    case "Geolocation": return new _GeolocationImpl._wrap(domObject);
    case "Geoposition": return new _GeopositionImpl._wrap(domObject);
    case "HTMLHRElement": return new _HRElementImpl._wrap(domObject);
    case "HTMLAllCollection": return new _HTMLAllCollectionImpl._wrap(domObject);
    case "HTMLCollection": return new _HTMLCollectionImpl._wrap(domObject);
    case "HTMLOptionsCollection": return new _HTMLOptionsCollectionImpl._wrap(domObject);
    case "HashChangeEvent": return new _HashChangeEventImpl._wrap(domObject);
    case "HTMLHeadElement": return new _HeadElementImpl._wrap(domObject);
    case "HTMLHeadingElement": return new _HeadingElementImpl._wrap(domObject);
    case "HighPass2FilterNode": return new _HighPass2FilterNodeImpl._wrap(domObject);
    case "History": return new _HistoryImpl._wrap(domObject);
    case "IDBAny": return new _IDBAnyImpl._wrap(domObject);
    case "IDBCursor": return new _IDBCursorImpl._wrap(domObject);
    case "IDBCursorWithValue": return new _IDBCursorWithValueImpl._wrap(domObject);
    case "IDBDatabase": return new _IDBDatabaseImpl._wrap(domObject);
    case "IDBDatabaseError": return new _IDBDatabaseErrorImpl._wrap(domObject);
    case "IDBDatabaseException": return new _IDBDatabaseExceptionImpl._wrap(domObject);
    case "IDBFactory": return new _IDBFactoryImpl._wrap(domObject);
    case "IDBIndex": return new _IDBIndexImpl._wrap(domObject);
    case "IDBKey": return new _IDBKeyImpl._wrap(domObject);
    case "IDBKeyRange": return new _IDBKeyRangeImpl._wrap(domObject);
    case "IDBObjectStore": return new _IDBObjectStoreImpl._wrap(domObject);
    case "IDBRequest": return new _IDBRequestImpl._wrap(domObject);
    case "IDBTransaction": return new _IDBTransactionImpl._wrap(domObject);
    case "IDBVersionChangeEvent": return new _IDBVersionChangeEventImpl._wrap(domObject);
    case "IDBVersionChangeRequest": return new _IDBVersionChangeRequestImpl._wrap(domObject);
    case "HTMLIFrameElement": return new _IFrameElementImpl._wrap(domObject);
    case "ImageData": return new _ImageDataImpl._wrap(domObject);
    case "HTMLImageElement": return new _ImageElementImpl._wrap(domObject);
    case "HTMLInputElement": return new _InputElementImpl._wrap(domObject);
    case "Int16Array": return new _Int16ArrayImpl._wrap(domObject);
    case "Int32Array": return new _Int32ArrayImpl._wrap(domObject);
    case "Int8Array": return new _Int8ArrayImpl._wrap(domObject);
    case "JavaScriptAudioNode": return new _JavaScriptAudioNodeImpl._wrap(domObject);
    case "JavaScriptCallFrame": return new _JavaScriptCallFrameImpl._wrap(domObject);
    case "KeyboardEvent": return new _KeyboardEventImpl._wrap(domObject);
    case "HTMLKeygenElement": return new _KeygenElementImpl._wrap(domObject);
    case "HTMLLIElement": return new _LIElementImpl._wrap(domObject);
    case "HTMLLabelElement": return new _LabelElementImpl._wrap(domObject);
    case "HTMLLegendElement": return new _LegendElementImpl._wrap(domObject);
    case "HTMLLinkElement": return new _LinkElementImpl._wrap(domObject);
    case "MediaStream": return new _MediaStreamImpl._wrap(domObject);
    case "LocalMediaStream": return new _LocalMediaStreamImpl._wrap(domObject);
    case "Location": return new _LocationImpl._wrap(domObject);
    case "LowPass2FilterNode": return new _LowPass2FilterNodeImpl._wrap(domObject);
    case "HTMLMapElement": return new _MapElementImpl._wrap(domObject);
    case "HTMLMarqueeElement": return new _MarqueeElementImpl._wrap(domObject);
    case "MediaController": return new _MediaControllerImpl._wrap(domObject);
    case "MediaElementAudioSourceNode": return new _MediaElementAudioSourceNodeImpl._wrap(domObject);
    case "MediaError": return new _MediaErrorImpl._wrap(domObject);
    case "MediaList": return new _MediaListImpl._wrap(domObject);
    case "MediaQueryList": return new _MediaQueryListImpl._wrap(domObject);
    case "MediaQueryListListener": return new _MediaQueryListListenerImpl._wrap(domObject);
    case "MediaStreamEvent": return new _MediaStreamEventImpl._wrap(domObject);
    case "MediaStreamList": return new _MediaStreamListImpl._wrap(domObject);
    case "MediaStreamTrack": return new _MediaStreamTrackImpl._wrap(domObject);
    case "MediaStreamTrackList": return new _MediaStreamTrackListImpl._wrap(domObject);
    case "MemoryInfo": return new _MemoryInfoImpl._wrap(domObject);
    case "HTMLMenuElement": return new _MenuElementImpl._wrap(domObject);
    case "MessageChannel": return new _MessageChannelImpl._wrap(domObject);
    case "MessageEvent": return new _MessageEventImpl._wrap(domObject);
    case "MessagePort": return new _MessagePortImpl._wrap(domObject);
    case "HTMLMetaElement": return new _MetaElementImpl._wrap(domObject);
    case "Metadata": return new _MetadataImpl._wrap(domObject);
    case "HTMLMeterElement": return new _MeterElementImpl._wrap(domObject);
    case "HTMLModElement": return new _ModElementImpl._wrap(domObject);
    case "MouseEvent": return new _MouseEventImpl._wrap(domObject);
    case "MutationEvent": return new _MutationEventImpl._wrap(domObject);
    case "NamedNodeMap": return new _NamedNodeMapImpl._wrap(domObject);
    case "Navigator": return new _NavigatorImpl._wrap(domObject);
    case "NavigatorUserMediaError": return new _NavigatorUserMediaErrorImpl._wrap(domObject);
    case "NodeFilter": return new _NodeFilterImpl._wrap(domObject);
    case "NodeIterator": return new _NodeIteratorImpl._wrap(domObject);
    case "NodeList": return new _NodeListImpl._wrap(domObject);
    case "Notation": return new _NotationImpl._wrap(domObject);
    case "Notification": return new _NotificationImpl._wrap(domObject);
    case "NotificationCenter": return new _NotificationCenterImpl._wrap(domObject);
    case "OESStandardDerivatives": return new _OESStandardDerivativesImpl._wrap(domObject);
    case "OESTextureFloat": return new _OESTextureFloatImpl._wrap(domObject);
    case "OESVertexArrayObject": return new _OESVertexArrayObjectImpl._wrap(domObject);
    case "HTMLOListElement": return new _OListElementImpl._wrap(domObject);
    case "HTMLObjectElement": return new _ObjectElementImpl._wrap(domObject);
    case "OfflineAudioCompletionEvent": return new _OfflineAudioCompletionEventImpl._wrap(domObject);
    case "OperationNotAllowedException": return new _OperationNotAllowedExceptionImpl._wrap(domObject);
    case "HTMLOptGroupElement": return new _OptGroupElementImpl._wrap(domObject);
    case "HTMLOptionElement": return new _OptionElementImpl._wrap(domObject);
    case "HTMLOutputElement": return new _OutputElementImpl._wrap(domObject);
    case "OverflowEvent": return new _OverflowEventImpl._wrap(domObject);
    case "PageTransitionEvent": return new _PageTransitionEventImpl._wrap(domObject);
    case "HTMLParagraphElement": return new _ParagraphElementImpl._wrap(domObject);
    case "HTMLParamElement": return new _ParamElementImpl._wrap(domObject);
    case "PeerConnection": return new _PeerConnectionImpl._wrap(domObject);
    case "Performance": return new _PerformanceImpl._wrap(domObject);
    case "PerformanceNavigation": return new _PerformanceNavigationImpl._wrap(domObject);
    case "PerformanceTiming": return new _PerformanceTimingImpl._wrap(domObject);
    case "WebKitPoint": return new _PointImpl._wrap(domObject);
    case "PopStateEvent": return new _PopStateEventImpl._wrap(domObject);
    case "PositionError": return new _PositionErrorImpl._wrap(domObject);
    case "HTMLPreElement": return new _PreElementImpl._wrap(domObject);
    case "ProcessingInstruction": return new _ProcessingInstructionImpl._wrap(domObject);
    case "HTMLProgressElement": return new _ProgressElementImpl._wrap(domObject);
    case "ProgressEvent": return new _ProgressEventImpl._wrap(domObject);
    case "HTMLQuoteElement": return new _QuoteElementImpl._wrap(domObject);
    case "RGBColor": return new _RGBColorImpl._wrap(domObject);
    case "Range": return new _RangeImpl._wrap(domObject);
    case "RangeException": return new _RangeExceptionImpl._wrap(domObject);
    case "RealtimeAnalyserNode": return new _RealtimeAnalyserNodeImpl._wrap(domObject);
    case "Rect": return new _RectImpl._wrap(domObject);
    case "SQLError": return new _SQLErrorImpl._wrap(domObject);
    case "SQLException": return new _SQLExceptionImpl._wrap(domObject);
    case "SQLResultSet": return new _SQLResultSetImpl._wrap(domObject);
    case "SQLResultSetRowList": return new _SQLResultSetRowListImpl._wrap(domObject);
    case "SQLTransaction": return new _SQLTransactionImpl._wrap(domObject);
    case "SQLTransactionSync": return new _SQLTransactionSyncImpl._wrap(domObject);
    case "SVGElement": return new _SVGElementImpl._wrap(domObject);
    case "SVGURIReference": return new _SVGURIReferenceImpl._wrap(domObject);
    case "SVGTests": return new _SVGTestsImpl._wrap(domObject);
    case "SVGLangSpace": return new _SVGLangSpaceImpl._wrap(domObject);
    case "SVGExternalResourcesRequired": return new _SVGExternalResourcesRequiredImpl._wrap(domObject);
    case "SVGStylable": return new _SVGStylableImpl._wrap(domObject);
    case "SVGLocatable": return new _SVGLocatableImpl._wrap(domObject);
    case "SVGTransformable": return new _SVGTransformableImpl._wrap(domObject);
    case "SVGAElement": return new _SVGAElementImpl._wrap(domObject);
    case "SVGAltGlyphDefElement": return new _SVGAltGlyphDefElementImpl._wrap(domObject);
    case "SVGTextContentElement": return new _SVGTextContentElementImpl._wrap(domObject);
    case "SVGTextPositioningElement": return new _SVGTextPositioningElementImpl._wrap(domObject);
    case "SVGAltGlyphElement": return new _SVGAltGlyphElementImpl._wrap(domObject);
    case "SVGAltGlyphItemElement": return new _SVGAltGlyphItemElementImpl._wrap(domObject);
    case "SVGAngle": return new _SVGAngleImpl._wrap(domObject);
    case "SVGAnimationElement": return new _SVGAnimationElementImpl._wrap(domObject);
    case "SVGAnimateColorElement": return new _SVGAnimateColorElementImpl._wrap(domObject);
    case "SVGAnimateElement": return new _SVGAnimateElementImpl._wrap(domObject);
    case "SVGAnimateMotionElement": return new _SVGAnimateMotionElementImpl._wrap(domObject);
    case "SVGAnimateTransformElement": return new _SVGAnimateTransformElementImpl._wrap(domObject);
    case "SVGAnimatedAngle": return new _SVGAnimatedAngleImpl._wrap(domObject);
    case "SVGAnimatedBoolean": return new _SVGAnimatedBooleanImpl._wrap(domObject);
    case "SVGAnimatedEnumeration": return new _SVGAnimatedEnumerationImpl._wrap(domObject);
    case "SVGAnimatedInteger": return new _SVGAnimatedIntegerImpl._wrap(domObject);
    case "SVGAnimatedLength": return new _SVGAnimatedLengthImpl._wrap(domObject);
    case "SVGAnimatedLengthList": return new _SVGAnimatedLengthListImpl._wrap(domObject);
    case "SVGAnimatedNumber": return new _SVGAnimatedNumberImpl._wrap(domObject);
    case "SVGAnimatedNumberList": return new _SVGAnimatedNumberListImpl._wrap(domObject);
    case "SVGAnimatedPreserveAspectRatio": return new _SVGAnimatedPreserveAspectRatioImpl._wrap(domObject);
    case "SVGAnimatedRect": return new _SVGAnimatedRectImpl._wrap(domObject);
    case "SVGAnimatedString": return new _SVGAnimatedStringImpl._wrap(domObject);
    case "SVGAnimatedTransformList": return new _SVGAnimatedTransformListImpl._wrap(domObject);
    case "SVGCircleElement": return new _SVGCircleElementImpl._wrap(domObject);
    case "SVGClipPathElement": return new _SVGClipPathElementImpl._wrap(domObject);
    case "SVGColor": return new _SVGColorImpl._wrap(domObject);
    case "SVGComponentTransferFunctionElement": return new _SVGComponentTransferFunctionElementImpl._wrap(domObject);
    case "SVGCursorElement": return new _SVGCursorElementImpl._wrap(domObject);
    case "SVGDefsElement": return new _SVGDefsElementImpl._wrap(domObject);
    case "SVGDescElement": return new _SVGDescElementImpl._wrap(domObject);
    case "SVGDocument": return new _SVGDocumentImpl._wrap(domObject);
    case "SVGElementInstance": return new _SVGElementInstanceImpl._wrap(domObject);
    case "SVGElementInstanceList": return new _SVGElementInstanceListImpl._wrap(domObject);
    case "SVGEllipseElement": return new _SVGEllipseElementImpl._wrap(domObject);
    case "SVGException": return new _SVGExceptionImpl._wrap(domObject);
    case "SVGFilterPrimitiveStandardAttributes": return new _SVGFilterPrimitiveStandardAttributesImpl._wrap(domObject);
    case "SVGFEBlendElement": return new _SVGFEBlendElementImpl._wrap(domObject);
    case "SVGFEColorMatrixElement": return new _SVGFEColorMatrixElementImpl._wrap(domObject);
    case "SVGFEComponentTransferElement": return new _SVGFEComponentTransferElementImpl._wrap(domObject);
    case "SVGFECompositeElement": return new _SVGFECompositeElementImpl._wrap(domObject);
    case "SVGFEConvolveMatrixElement": return new _SVGFEConvolveMatrixElementImpl._wrap(domObject);
    case "SVGFEDiffuseLightingElement": return new _SVGFEDiffuseLightingElementImpl._wrap(domObject);
    case "SVGFEDisplacementMapElement": return new _SVGFEDisplacementMapElementImpl._wrap(domObject);
    case "SVGFEDistantLightElement": return new _SVGFEDistantLightElementImpl._wrap(domObject);
    case "SVGFEDropShadowElement": return new _SVGFEDropShadowElementImpl._wrap(domObject);
    case "SVGFEFloodElement": return new _SVGFEFloodElementImpl._wrap(domObject);
    case "SVGFEFuncAElement": return new _SVGFEFuncAElementImpl._wrap(domObject);
    case "SVGFEFuncBElement": return new _SVGFEFuncBElementImpl._wrap(domObject);
    case "SVGFEFuncGElement": return new _SVGFEFuncGElementImpl._wrap(domObject);
    case "SVGFEFuncRElement": return new _SVGFEFuncRElementImpl._wrap(domObject);
    case "SVGFEGaussianBlurElement": return new _SVGFEGaussianBlurElementImpl._wrap(domObject);
    case "SVGFEImageElement": return new _SVGFEImageElementImpl._wrap(domObject);
    case "SVGFEMergeElement": return new _SVGFEMergeElementImpl._wrap(domObject);
    case "SVGFEMergeNodeElement": return new _SVGFEMergeNodeElementImpl._wrap(domObject);
    case "SVGFEMorphologyElement": return new _SVGFEMorphologyElementImpl._wrap(domObject);
    case "SVGFEOffsetElement": return new _SVGFEOffsetElementImpl._wrap(domObject);
    case "SVGFEPointLightElement": return new _SVGFEPointLightElementImpl._wrap(domObject);
    case "SVGFESpecularLightingElement": return new _SVGFESpecularLightingElementImpl._wrap(domObject);
    case "SVGFESpotLightElement": return new _SVGFESpotLightElementImpl._wrap(domObject);
    case "SVGFETileElement": return new _SVGFETileElementImpl._wrap(domObject);
    case "SVGFETurbulenceElement": return new _SVGFETurbulenceElementImpl._wrap(domObject);
    case "SVGFilterElement": return new _SVGFilterElementImpl._wrap(domObject);
    case "SVGFitToViewBox": return new _SVGFitToViewBoxImpl._wrap(domObject);
    case "SVGFontElement": return new _SVGFontElementImpl._wrap(domObject);
    case "SVGFontFaceElement": return new _SVGFontFaceElementImpl._wrap(domObject);
    case "SVGFontFaceFormatElement": return new _SVGFontFaceFormatElementImpl._wrap(domObject);
    case "SVGFontFaceNameElement": return new _SVGFontFaceNameElementImpl._wrap(domObject);
    case "SVGFontFaceSrcElement": return new _SVGFontFaceSrcElementImpl._wrap(domObject);
    case "SVGFontFaceUriElement": return new _SVGFontFaceUriElementImpl._wrap(domObject);
    case "SVGForeignObjectElement": return new _SVGForeignObjectElementImpl._wrap(domObject);
    case "SVGGElement": return new _SVGGElementImpl._wrap(domObject);
    case "SVGGlyphElement": return new _SVGGlyphElementImpl._wrap(domObject);
    case "SVGGlyphRefElement": return new _SVGGlyphRefElementImpl._wrap(domObject);
    case "SVGGradientElement": return new _SVGGradientElementImpl._wrap(domObject);
    case "SVGHKernElement": return new _SVGHKernElementImpl._wrap(domObject);
    case "SVGImageElement": return new _SVGImageElementImpl._wrap(domObject);
    case "SVGLength": return new _SVGLengthImpl._wrap(domObject);
    case "SVGLengthList": return new _SVGLengthListImpl._wrap(domObject);
    case "SVGLineElement": return new _SVGLineElementImpl._wrap(domObject);
    case "SVGLinearGradientElement": return new _SVGLinearGradientElementImpl._wrap(domObject);
    case "SVGMPathElement": return new _SVGMPathElementImpl._wrap(domObject);
    case "SVGMarkerElement": return new _SVGMarkerElementImpl._wrap(domObject);
    case "SVGMaskElement": return new _SVGMaskElementImpl._wrap(domObject);
    case "SVGMatrix": return new _SVGMatrixImpl._wrap(domObject);
    case "SVGMetadataElement": return new _SVGMetadataElementImpl._wrap(domObject);
    case "SVGMissingGlyphElement": return new _SVGMissingGlyphElementImpl._wrap(domObject);
    case "SVGNumber": return new _SVGNumberImpl._wrap(domObject);
    case "SVGNumberList": return new _SVGNumberListImpl._wrap(domObject);
    case "SVGPaint": return new _SVGPaintImpl._wrap(domObject);
    case "SVGPathElement": return new _SVGPathElementImpl._wrap(domObject);
    case "SVGPathSeg": return new _SVGPathSegImpl._wrap(domObject);
    case "SVGPathSegArcAbs": return new _SVGPathSegArcAbsImpl._wrap(domObject);
    case "SVGPathSegArcRel": return new _SVGPathSegArcRelImpl._wrap(domObject);
    case "SVGPathSegClosePath": return new _SVGPathSegClosePathImpl._wrap(domObject);
    case "SVGPathSegCurvetoCubicAbs": return new _SVGPathSegCurvetoCubicAbsImpl._wrap(domObject);
    case "SVGPathSegCurvetoCubicRel": return new _SVGPathSegCurvetoCubicRelImpl._wrap(domObject);
    case "SVGPathSegCurvetoCubicSmoothAbs": return new _SVGPathSegCurvetoCubicSmoothAbsImpl._wrap(domObject);
    case "SVGPathSegCurvetoCubicSmoothRel": return new _SVGPathSegCurvetoCubicSmoothRelImpl._wrap(domObject);
    case "SVGPathSegCurvetoQuadraticAbs": return new _SVGPathSegCurvetoQuadraticAbsImpl._wrap(domObject);
    case "SVGPathSegCurvetoQuadraticRel": return new _SVGPathSegCurvetoQuadraticRelImpl._wrap(domObject);
    case "SVGPathSegCurvetoQuadraticSmoothAbs": return new _SVGPathSegCurvetoQuadraticSmoothAbsImpl._wrap(domObject);
    case "SVGPathSegCurvetoQuadraticSmoothRel": return new _SVGPathSegCurvetoQuadraticSmoothRelImpl._wrap(domObject);
    case "SVGPathSegLinetoAbs": return new _SVGPathSegLinetoAbsImpl._wrap(domObject);
    case "SVGPathSegLinetoHorizontalAbs": return new _SVGPathSegLinetoHorizontalAbsImpl._wrap(domObject);
    case "SVGPathSegLinetoHorizontalRel": return new _SVGPathSegLinetoHorizontalRelImpl._wrap(domObject);
    case "SVGPathSegLinetoRel": return new _SVGPathSegLinetoRelImpl._wrap(domObject);
    case "SVGPathSegLinetoVerticalAbs": return new _SVGPathSegLinetoVerticalAbsImpl._wrap(domObject);
    case "SVGPathSegLinetoVerticalRel": return new _SVGPathSegLinetoVerticalRelImpl._wrap(domObject);
    case "SVGPathSegList": return new _SVGPathSegListImpl._wrap(domObject);
    case "SVGPathSegMovetoAbs": return new _SVGPathSegMovetoAbsImpl._wrap(domObject);
    case "SVGPathSegMovetoRel": return new _SVGPathSegMovetoRelImpl._wrap(domObject);
    case "SVGPatternElement": return new _SVGPatternElementImpl._wrap(domObject);
    case "SVGPoint": return new _SVGPointImpl._wrap(domObject);
    case "SVGPointList": return new _SVGPointListImpl._wrap(domObject);
    case "SVGPolygonElement": return new _SVGPolygonElementImpl._wrap(domObject);
    case "SVGPolylineElement": return new _SVGPolylineElementImpl._wrap(domObject);
    case "SVGPreserveAspectRatio": return new _SVGPreserveAspectRatioImpl._wrap(domObject);
    case "SVGRadialGradientElement": return new _SVGRadialGradientElementImpl._wrap(domObject);
    case "SVGRect": return new _SVGRectImpl._wrap(domObject);
    case "SVGRectElement": return new _SVGRectElementImpl._wrap(domObject);
    case "SVGRenderingIntent": return new _SVGRenderingIntentImpl._wrap(domObject);
    case "SVGZoomAndPan": return new _SVGZoomAndPanImpl._wrap(domObject);
    case "SVGSVGElement": return new _SVGSVGElementImpl._wrap(domObject);
    case "SVGScriptElement": return new _SVGScriptElementImpl._wrap(domObject);
    case "SVGSetElement": return new _SVGSetElementImpl._wrap(domObject);
    case "SVGStopElement": return new _SVGStopElementImpl._wrap(domObject);
    case "SVGStringList": return new _SVGStringListImpl._wrap(domObject);
    case "SVGStyleElement": return new _SVGStyleElementImpl._wrap(domObject);
    case "SVGSwitchElement": return new _SVGSwitchElementImpl._wrap(domObject);
    case "SVGSymbolElement": return new _SVGSymbolElementImpl._wrap(domObject);
    case "SVGTRefElement": return new _SVGTRefElementImpl._wrap(domObject);
    case "SVGTSpanElement": return new _SVGTSpanElementImpl._wrap(domObject);
    case "SVGTextElement": return new _SVGTextElementImpl._wrap(domObject);
    case "SVGTextPathElement": return new _SVGTextPathElementImpl._wrap(domObject);
    case "SVGTitleElement": return new _SVGTitleElementImpl._wrap(domObject);
    case "SVGTransform": return new _SVGTransformImpl._wrap(domObject);
    case "SVGTransformList": return new _SVGTransformListImpl._wrap(domObject);
    case "SVGUnitTypes": return new _SVGUnitTypesImpl._wrap(domObject);
    case "SVGUseElement": return new _SVGUseElementImpl._wrap(domObject);
    case "SVGVKernElement": return new _SVGVKernElementImpl._wrap(domObject);
    case "SVGViewElement": return new _SVGViewElementImpl._wrap(domObject);
    case "SVGViewSpec": return new _SVGViewSpecImpl._wrap(domObject);
    case "SVGZoomEvent": return new _SVGZoomEventImpl._wrap(domObject);
    case "Screen": return new _ScreenImpl._wrap(domObject);
    case "HTMLScriptElement": return new _ScriptElementImpl._wrap(domObject);
    case "ScriptProfile": return new _ScriptProfileImpl._wrap(domObject);
    case "ScriptProfileNode": return new _ScriptProfileNodeImpl._wrap(domObject);
    case "HTMLSelectElement": return new _SelectElementImpl._wrap(domObject);
    case "HTMLShadowElement": return new _ShadowElementImpl._wrap(domObject);
    case "ShadowRoot": return new _ShadowRootImpl._wrap(domObject);
    case "SharedWorker": return new _SharedWorkerImpl._wrap(domObject);
    case "SharedWorkerContext": return new _SharedWorkerContextImpl._wrap(domObject);
    case "HTMLSourceElement": return new _SourceElementImpl._wrap(domObject);
    case "HTMLSpanElement": return new _SpanElementImpl._wrap(domObject);
    case "SpeechInputEvent": return new _SpeechInputEventImpl._wrap(domObject);
    case "SpeechInputResult": return new _SpeechInputResultImpl._wrap(domObject);
    case "SpeechInputResultList": return new _SpeechInputResultListImpl._wrap(domObject);
    case "Storage": return new _StorageImpl._wrap(domObject);
    case "StorageEvent": return new _StorageEventImpl._wrap(domObject);
    case "StorageInfo": return new _StorageInfoImpl._wrap(domObject);
    case "HTMLStyleElement": return new _StyleElementImpl._wrap(domObject);
    case "StyleMedia": return new _StyleMediaImpl._wrap(domObject);
    case "StyleSheetList": return new _StyleSheetListImpl._wrap(domObject);
    case "HTMLTableCaptionElement": return new _TableCaptionElementImpl._wrap(domObject);
    case "HTMLTableCellElement": return new _TableCellElementImpl._wrap(domObject);
    case "HTMLTableColElement": return new _TableColElementImpl._wrap(domObject);
    case "HTMLTableElement": return new _TableElementImpl._wrap(domObject);
    case "HTMLTableRowElement": return new _TableRowElementImpl._wrap(domObject);
    case "HTMLTableSectionElement": return new _TableSectionElementImpl._wrap(domObject);
    case "HTMLTextAreaElement": return new _TextAreaElementImpl._wrap(domObject);
    case "TextEvent": return new _TextEventImpl._wrap(domObject);
    case "TextMetrics": return new _TextMetricsImpl._wrap(domObject);
    case "TextTrack": return new _TextTrackImpl._wrap(domObject);
    case "TextTrackCue": return new _TextTrackCueImpl._wrap(domObject);
    case "TextTrackCueList": return new _TextTrackCueListImpl._wrap(domObject);
    case "TextTrackList": return new _TextTrackListImpl._wrap(domObject);
    case "TimeRanges": return new _TimeRangesImpl._wrap(domObject);
    case "HTMLTitleElement": return new _TitleElementImpl._wrap(domObject);
    case "Touch": return new _TouchImpl._wrap(domObject);
    case "TouchEvent": return new _TouchEventImpl._wrap(domObject);
    case "TouchList": return new _TouchListImpl._wrap(domObject);
    case "HTMLTrackElement": return new _TrackElementImpl._wrap(domObject);
    case "TrackEvent": return new _TrackEventImpl._wrap(domObject);
    case "WebKitTransitionEvent": return new _TransitionEventImpl._wrap(domObject);
    case "TreeWalker": return new _TreeWalkerImpl._wrap(domObject);
    case "HTMLUListElement": return new _UListElementImpl._wrap(domObject);
    case "Uint16Array": return new _Uint16ArrayImpl._wrap(domObject);
    case "Uint32Array": return new _Uint32ArrayImpl._wrap(domObject);
    case "Uint8Array": return new _Uint8ArrayImpl._wrap(domObject);
    case "Uint8ClampedArray": return new _Uint8ClampedArrayImpl._wrap(domObject);
    case "HTMLUnknownElement": return new _UnknownElementImpl._wrap(domObject);
    case "ValidityState": return new _ValidityStateImpl._wrap(domObject);
    case "HTMLVideoElement": return new _VideoElementImpl._wrap(domObject);
    case "WaveShaperNode": return new _WaveShaperNodeImpl._wrap(domObject);
    case "WebGLActiveInfo": return new _WebGLActiveInfoImpl._wrap(domObject);
    case "WebGLBuffer": return new _WebGLBufferImpl._wrap(domObject);
    case "WebGLCompressedTextureS3TC": return new _WebGLCompressedTextureS3TCImpl._wrap(domObject);
    case "WebGLContextAttributes": return new _WebGLContextAttributesImpl._wrap(domObject);
    case "WebGLContextEvent": return new _WebGLContextEventImpl._wrap(domObject);
    case "WebGLDebugRendererInfo": return new _WebGLDebugRendererInfoImpl._wrap(domObject);
    case "WebGLDebugShaders": return new _WebGLDebugShadersImpl._wrap(domObject);
    case "WebGLFramebuffer": return new _WebGLFramebufferImpl._wrap(domObject);
    case "WebGLLoseContext": return new _WebGLLoseContextImpl._wrap(domObject);
    case "WebGLProgram": return new _WebGLProgramImpl._wrap(domObject);
    case "WebGLRenderbuffer": return new _WebGLRenderbufferImpl._wrap(domObject);
    case "WebGLRenderingContext": return new _WebGLRenderingContextImpl._wrap(domObject);
    case "WebGLShader": return new _WebGLShaderImpl._wrap(domObject);
    case "WebGLTexture": return new _WebGLTextureImpl._wrap(domObject);
    case "WebGLUniformLocation": return new _WebGLUniformLocationImpl._wrap(domObject);
    case "WebGLVertexArrayObjectOES": return new _WebGLVertexArrayObjectOESImpl._wrap(domObject);
    case "WebKitCSSRegionRule": return new _WebKitCSSRegionRuleImpl._wrap(domObject);
    case "WebKitNamedFlow": return new _WebKitNamedFlowImpl._wrap(domObject);
    case "WebSocket": return new _WebSocketImpl._wrap(domObject);
    case "WheelEvent": return new _WheelEventImpl._wrap(domObject);
    case "DOMWindow": return new _WindowImpl._wrap(domObject);
    case "Worker": return new _WorkerImpl._wrap(domObject);
    case "WorkerLocation": return new _WorkerLocationImpl._wrap(domObject);
    case "WorkerNavigator": return new _WorkerNavigatorImpl._wrap(domObject);
    case "XMLHttpRequest": return new _XMLHttpRequestImpl._wrap(domObject);
    case "XMLHttpRequestException": return new _XMLHttpRequestExceptionImpl._wrap(domObject);
    case "XMLHttpRequestProgressEvent": return new _XMLHttpRequestProgressEventImpl._wrap(domObject);
    case "XMLHttpRequestUpload": return new _XMLHttpRequestUploadImpl._wrap(domObject);
    case "XMLSerializer": return new _XMLSerializerImpl._wrap(domObject);
    case "XPathEvaluator": return new _XPathEvaluatorImpl._wrap(domObject);
    case "XPathException": return new _XPathExceptionImpl._wrap(domObject);
    case "XPathExpression": return new _XPathExpressionImpl._wrap(domObject);
    case "XPathNSResolver": return new _XPathNSResolverImpl._wrap(domObject);
    case "XPathResult": return new _XPathResultImpl._wrap(domObject);
    case "XSLTProcessor": return new _XSLTProcessorImpl._wrap(domObject);
    default:
      throw 'Unrecognized object $domObject. Name=${domObject.typeName}';
  }
}
