// Copyright (c) 2012, the Dart project authors.  Please see the AUTHORS file
// for details. All rights reserved. Use of this source code is governed by a
// BSD-style license that can be found in the LICENSE file.

// WARNING:
//   This file contains documentation that is merged into the real source.
//   Do not make code changes here.

/// @domName SpeechRecognition
interface SpeechRecognition extends EventTarget default _SpeechRecognitionFactoryProvider {

  SpeechRecognition();

  /**
   * @domName EventTarget.addEventListener, EventTarget.removeEventListener, EventTarget.dispatchEvent
   */
  SpeechRecognitionEvents get on();

  /** @domName SpeechRecognition.continuous */
  bool continuous;

  /** @domName SpeechRecognition.grammars */
  SpeechGrammarList grammars;

  /** @domName SpeechRecognition.lang */
  String lang;

  /** @domName SpeechRecognition.abort */
  void abort();

  /** @domName SpeechRecognition.addEventListener */
  void $dom_addEventListener(String type, EventListener listener, [bool useCapture]);

  /** @domName SpeechRecognition.dispatchEvent */
  bool $dom_dispatchEvent(Event evt);

  /** @domName SpeechRecognition.removeEventListener */
  void $dom_removeEventListener(String type, EventListener listener, [bool useCapture]);

  /** @domName SpeechRecognition.start */
  void start();

  /** @domName SpeechRecognition.stop */
  void stop();
}

interface SpeechRecognitionEvents extends Events {

  EventListenerList get audioEnd();

  EventListenerList get audioStart();

  EventListenerList get end();

  EventListenerList get error();

  EventListenerList get noMatch();

  EventListenerList get result();

  EventListenerList get resultDeleted();

  EventListenerList get soundEnd();

  EventListenerList get soundStart();

  EventListenerList get speechEnd();

  EventListenerList get speechStart();

  EventListenerList get start();
}
