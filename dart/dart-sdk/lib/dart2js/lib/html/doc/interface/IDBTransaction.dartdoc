// Copyright (c) 2012, the Dart project authors.  Please see the AUTHORS file
// for details. All rights reserved. Use of this source code is governed by a
// BSD-style license that can be found in the LICENSE file.

// WARNING:
//   This file contains documentation that is merged into the real source.
//   Do not make code changes here.

/// @domName IDBTransaction
interface IDBTransaction extends EventTarget {

  /**
   * @domName EventTarget.addEventListener, EventTarget.removeEventListener, EventTarget.dispatchEvent
   */
  IDBTransactionEvents get on();

  static final int READ_ONLY = 0;

  static final int READ_WRITE = 1;

  static final int VERSION_CHANGE = 2;

  /** @domName IDBTransaction.db */
  final IDBDatabase db;

  /** @domName IDBTransaction.error */
  final DOMError error;

  /** @domName IDBTransaction.mode */
  final String mode;

  /** @domName IDBTransaction.abort */
  void abort();

  /** @domName IDBTransaction.addEventListener */
  void $dom_addEventListener(String type, EventListener listener, [bool useCapture]);

  /** @domName IDBTransaction.dispatchEvent */
  bool $dom_dispatchEvent(Event evt);

  /** @domName IDBTransaction.objectStore */
  IDBObjectStore objectStore(String name);

  /** @domName IDBTransaction.removeEventListener */
  void $dom_removeEventListener(String type, EventListener listener, [bool useCapture]);
}

interface IDBTransactionEvents extends Events {

  EventListenerList get abort();

  EventListenerList get complete();

  EventListenerList get error();
}
